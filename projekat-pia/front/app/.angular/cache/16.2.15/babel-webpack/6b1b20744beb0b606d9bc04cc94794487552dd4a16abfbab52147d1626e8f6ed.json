{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, NgZone, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nconst _c0 = [\"*\"];\nclass MapEventManager {\n  /** Clears all currently-registered event listeners. */\n  _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n    this._listeners = [];\n  }\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    /** Pending listeners that were added before the target was set. */\n    this._pending = [];\n    this._listeners = [];\n    this._targetStream = new BehaviorSubject(undefined);\n  }\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter(name) {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({\n            observable,\n            observer\n          });\n          return undefined;\n        }\n        const listener = target.addListener(name, event => {\n          this._ngZone.run(() => observer.next(event));\n        });\n        // If there's an error when initializing the Maps API (e.g. a wrong API key), it will\n        // return a dummy object that returns `undefined` from `addListener` (see #26514).\n        if (!listener) {\n          observer.complete();\n          return undefined;\n        }\n        this._listeners.push(listener);\n        return () => listener.remove();\n      });\n      return observable;\n    }));\n  }\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target) {\n    const currentTarget = this._targetStream.value;\n    if (target === currentTarget) {\n      return;\n    }\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n    this._targetStream.next(target);\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n  center: {\n    lat: 37.421995,\n    lng: -122.084092\n  },\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n  set center(center) {\n    this._center = center;\n  }\n  set zoom(zoom) {\n    this._zoom = zoom;\n  }\n  set options(options) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n  constructor(_elementRef, _ngZone, platformId) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n    this.height = DEFAULT_HEIGHT;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n    this.width = DEFAULT_WIDTH;\n    this._options = DEFAULT_OPTIONS;\n    /** Event emitted when the map is initialized. */\n    this.mapInitialized = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n     */\n    this.authFailure = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n    this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n    this.idle = this._eventManager.getLazyEmitter('idle');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n    this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n    this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n    this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n    this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n    this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n    this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n    this._isBrowser = isPlatformBrowser(platformId);\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace google not found, cannot construct embedded google ' + 'map. Please install the Google Maps JavaScript API: ' + 'https://developers.google.com/maps/documentation/javascript/' + 'tutorial#Loading_the_Maps_API');\n      }\n      this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n      googleMapsWindow.gm_authFailure = () => {\n        if (this._existingAuthFailureCallback) {\n          this._existingAuthFailureCallback();\n        }\n        this.authFailure.emit();\n      };\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n    const googleMap = this.googleMap;\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      }\n      // Note that the zoom can be zero.\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n      this._setSize();\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      if (google.maps.Map) {\n        this._initialize(google.maps.Map);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          google.maps.importLibrary('maps').then(lib => this._initialize(lib.Map));\n        });\n      }\n    }\n  }\n  _initialize(mapConstructor) {\n    this._ngZone.runOutsideAngular(() => {\n      this.googleMap = new mapConstructor(this._mapEl, this._combineOptions());\n      this._eventManager.setTarget(this.googleMap);\n      this.mapInitialized.emit(this.googleMap);\n    });\n  }\n  ngOnDestroy() {\n    this.mapInitialized.complete();\n    this._eventManager.destroy();\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n    }\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(bounds, padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x, y) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(latLngBounds, padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter() {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons() {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading() {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId() {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection() {\n    this._assertInitialized();\n    return this.googleMap.getProjection() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView() {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt() {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom() {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls() {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data() {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes() {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes() {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n  /** Returns a promise that resolves when the map has been initialized. */\n  _resolveMap() {\n    return this.googleMap ? Promise.resolve(this.googleMap) : this.mapInitialized.pipe(take(1)).toPromise();\n  }\n  _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height = this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n      styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n    }\n  }\n  /** Combines the center and zoom and the other map options into a single object */\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId,\n      mapId: this.mapId || options.mapId\n    };\n  }\n  /** Asserts that the map has been initialized. */\n  _assertInitialized() {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function GoogleMap_Factory(t) {\n    return new (t || GoogleMap)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: GoogleMap,\n    selectors: [[\"google-map\"]],\n    inputs: {\n      height: \"height\",\n      width: \"width\",\n      mapId: \"mapId\",\n      mapTypeId: \"mapTypeId\",\n      center: \"center\",\n      zoom: \"zoom\",\n      options: \"options\"\n    },\n    outputs: {\n      mapInitialized: \"mapInitialized\",\n      authFailure: \"authFailure\",\n      boundsChanged: \"boundsChanged\",\n      centerChanged: \"centerChanged\",\n      mapClick: \"mapClick\",\n      mapDblclick: \"mapDblclick\",\n      mapDrag: \"mapDrag\",\n      mapDragend: \"mapDragend\",\n      mapDragstart: \"mapDragstart\",\n      headingChanged: \"headingChanged\",\n      idle: \"idle\",\n      maptypeidChanged: \"maptypeidChanged\",\n      mapMousemove: \"mapMousemove\",\n      mapMouseout: \"mapMouseout\",\n      mapMouseover: \"mapMouseover\",\n      projectionChanged: \"projectionChanged\",\n      mapRightclick: \"mapRightclick\",\n      tilesloaded: \"tilesloaded\",\n      tiltChanged: \"tiltChanged\",\n      zoomChanged: \"zoomChanged\"\n    },\n    exportAs: [\"googleMap\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"map-container\"]],\n    template: function GoogleMap_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMap, [{\n    type: Component,\n    args: [{\n      selector: 'google-map',\n      exportAs: 'googleMap',\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<div class=\"map-container\"></div><ng-content />',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], {\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    mapId: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    mapInitialized: [{\n      type: Output\n    }],\n    authFailure: [{\n      type: Output\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    headingChanged: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    maptypeidChanged: [{\n      type: Output\n    }],\n    mapMousemove: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    projectionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    tilesloaded: [{\n      type: Output\n    }],\n    tiltChanged: [{\n      type: Output\n    }],\n    zoomChanged: [{\n      type: Output\n    }]\n  });\n})();\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\nclass MapBaseLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n  _initializeObject() {}\n  _setMap() {}\n  _unsetMap() {}\n  static #_ = this.ɵfac = function MapBaseLayer_Factory(t) {\n    return new (t || MapBaseLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapBaseLayer,\n    selectors: [[\"map-base-layer\"]],\n    exportAs: [\"mapBaseLayer\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBaseLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-base-layer',\n      exportAs: 'mapBaseLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer {\n  constructor() {\n    this._map = inject(GoogleMap);\n    this._zone = inject(NgZone);\n    /** Event emitted when the bicycling layer is initialized. */\n    this.bicyclingLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      if (google.maps.BicyclingLayer && this._map.googleMap) {\n        this._initialize(this._map.googleMap, google.maps.BicyclingLayer);\n      } else {\n        this._zone.runOutsideAngular(() => {\n          Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n            this._initialize(map, lib.BicyclingLayer);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, layerConstructor) {\n    this._zone.runOutsideAngular(() => {\n      this.bicyclingLayer = new layerConstructor();\n      this.bicyclingLayerInitialized.emit(this.bicyclingLayer);\n      this._assertLayerInitialized();\n      this.bicyclingLayer.setMap(map);\n    });\n  }\n  ngOnDestroy() {\n    this.bicyclingLayer?.setMap(null);\n  }\n  _assertLayerInitialized() {\n    if (!this.bicyclingLayer) {\n      throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function MapBicyclingLayer_Factory(t) {\n    return new (t || MapBicyclingLayer)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapBicyclingLayer,\n    selectors: [[\"map-bicycling-layer\"]],\n    outputs: {\n      bicyclingLayerInitialized: \"bicyclingLayerInitialized\"\n    },\n    exportAs: [\"mapBicyclingLayer\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-bicycling-layer',\n      exportAs: 'mapBicyclingLayer',\n      standalone: true\n    }]\n  }], null, {\n    bicyclingLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set center(center) {\n    this._center.next(center);\n  }\n  set radius(radius) {\n    this._radius.next(radius);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._center = new BehaviorSubject(undefined);\n    this._radius = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n    this.circleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n    this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n    this.circleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n    this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n    this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n    this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n    this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n    this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n    this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n    this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n    this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n    this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the circle is initialized. */\n    this.circleInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (!this._map._isBrowser) {\n      return;\n    }\n    this._combineOptions().pipe(take(1)).subscribe(options => {\n      if (google.maps.Circle && this._map.googleMap) {\n        this._initialize(this._map.googleMap, google.maps.Circle, options);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n            this._initialize(map, lib.Circle, options);\n          });\n        });\n      }\n    });\n  }\n  _initialize(map, circleConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.circle = new circleConstructor(options);\n      this._assertInitialized();\n      this.circle.setMap(map);\n      this._eventManager.setTarget(this.circle);\n      this.circleInitialized.emit(this.circle);\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.circle?.setMap(null);\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter() {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n  getRadius() {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n      const combinedOptions = {\n        ...options,\n        center: center || options.center,\n        radius: radius !== undefined ? radius : options.radius\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n  _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n  _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.circle) {\n        throw Error('Cannot interact with a Google Map Circle before it has been ' + 'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapCircle_Factory(t) {\n    return new (t || MapCircle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapCircle,\n    selectors: [[\"map-circle\"]],\n    inputs: {\n      options: \"options\",\n      center: \"center\",\n      radius: \"radius\"\n    },\n    outputs: {\n      centerChanged: \"centerChanged\",\n      circleClick: \"circleClick\",\n      circleDblclick: \"circleDblclick\",\n      circleDrag: \"circleDrag\",\n      circleDragend: \"circleDragend\",\n      circleDragstart: \"circleDragstart\",\n      circleMousedown: \"circleMousedown\",\n      circleMousemove: \"circleMousemove\",\n      circleMouseout: \"circleMouseout\",\n      circleMouseover: \"circleMouseover\",\n      circleMouseup: \"circleMouseup\",\n      radiusChanged: \"radiusChanged\",\n      circleRightclick: \"circleRightclick\",\n      circleInitialized: \"circleInitialized\"\n    },\n    exportAs: [\"mapCircle\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-circle',\n      exportAs: 'mapCircle',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblclick: [{\n      type: Output\n    }],\n    circleDrag: [{\n      type: Output\n    }],\n    circleDragend: [{\n      type: Output\n    }],\n    circleDragstart: [{\n      type: Output\n    }],\n    circleMousedown: [{\n      type: Output\n    }],\n    circleMousemove: [{\n      type: Output\n    }],\n    circleMouseout: [{\n      type: Output\n    }],\n    circleMouseover: [{\n      type: Output\n    }],\n    circleMouseup: [{\n      type: Output\n    }],\n    radiusChanged: [{\n      type: Output\n    }],\n    circleRightclick: [{\n      type: Output\n    }],\n    circleInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n  set directions(directions) {\n    this._directions = directions;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.directions_changed\n     */\n    this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n    /** Event emitted when the directions renderer is initialized. */\n    this.directionsRendererInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (google.maps.DirectionsRenderer && this._googleMap.googleMap) {\n        this._initialize(this._googleMap.googleMap, google.maps.DirectionsRenderer);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('routes')]).then(([map, lib]) => {\n            this._initialize(map, lib.DirectionsRenderer);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, rendererConstructor) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.directionsRenderer = new rendererConstructor(this._combineOptions());\n      this._assertInitialized();\n      this.directionsRenderer.setMap(map);\n      this._eventManager.setTarget(this.directionsRenderer);\n      this.directionsRendererInitialized.emit(this.directionsRenderer);\n    });\n  }\n  ngOnChanges(changes) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this.directionsRenderer?.setMap(null);\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n  getDirections() {\n    this._assertInitialized();\n    return this.directionsRenderer.getDirections();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n  getPanel() {\n    this._assertInitialized();\n    return this.directionsRenderer.getPanel();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n  getRouteIndex() {\n    this._assertInitialized();\n    return this.directionsRenderer.getRouteIndex();\n  }\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap\n    };\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.directionsRenderer) {\n        throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' + 'initialized. Please wait for the Directions Renderer to load before trying ' + 'to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapDirectionsRenderer_Factory(t) {\n    return new (t || MapDirectionsRenderer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapDirectionsRenderer,\n    selectors: [[\"map-directions-renderer\"]],\n    inputs: {\n      directions: \"directions\",\n      options: \"options\"\n    },\n    outputs: {\n      directionsChanged: \"directionsChanged\",\n      directionsRendererInitialized: \"directionsRendererInitialized\"\n    },\n    exportAs: [\"mapDirectionsRenderer\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsRenderer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-directions-renderer',\n      exportAs: 'mapDirectionsRenderer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    directions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    directionsChanged: [{\n      type: Output\n    }],\n    directionsRendererInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n  /** URL of the image that will be shown in the overlay. */\n  set url(url) {\n    this._url.next(url);\n  }\n  /** Bounds for the overlay. */\n  get bounds() {\n    return this._bounds.value;\n  }\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  /** Opacity of the overlay. */\n  set opacity(opacity) {\n    this._opacity.next(opacity);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._opacity = new BehaviorSubject(1);\n    this._url = new BehaviorSubject('');\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /** Whether the overlay is clickable */\n    this.clickable = false;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /** Event emitted when the ground overlay is initialized. */\n    this.groundOverlayInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        }\n        if (!bounds) {\n          return;\n        }\n        if (google.maps.GroundOverlay && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.GroundOverlay, bounds);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.GroundOverlay, bounds);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, overlayConstructor, bounds) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.groundOverlay = new overlayConstructor(this._url.getValue(), bounds, {\n        clickable: this.clickable,\n        opacity: this._opacity.value\n      });\n      this._assertInitialized();\n      this.groundOverlay.setMap(map);\n      this._eventManager.setTarget(this.groundOverlay);\n      this.groundOverlayInitialized.emit(this.groundOverlay);\n      // We only need to set up the watchers once.\n      if (!this._hasWatchers) {\n        this._hasWatchers = true;\n        this._watchForOpacityChanges();\n        this._watchForUrlChanges();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.groundOverlay?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity() {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl() {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n  _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this.groundOverlay?.setOpacity(opacity);\n      }\n    });\n  }\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      const overlay = this.groundOverlay;\n      if (overlay) {\n        overlay.set('url', url);\n        // Google Maps only redraws the overlay if we re-set the map.\n        overlay.setMap(null);\n        overlay.setMap(this._map.googleMap);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.groundOverlay) {\n        throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' + 'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapGroundOverlay_Factory(t) {\n    return new (t || MapGroundOverlay)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapGroundOverlay,\n    selectors: [[\"map-ground-overlay\"]],\n    inputs: {\n      url: \"url\",\n      bounds: \"bounds\",\n      clickable: \"clickable\",\n      opacity: \"opacity\"\n    },\n    outputs: {\n      mapClick: \"mapClick\",\n      mapDblclick: \"mapDblclick\",\n      groundOverlayInitialized: \"groundOverlayInitialized\"\n    },\n    exportAs: [\"mapGroundOverlay\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGroundOverlay, [{\n    type: Directive,\n    args: [{\n      selector: 'map-ground-overlay',\n      exportAs: 'mapGroundOverlay',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    url: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    groundOverlayInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set position(position) {\n    this._position.next(position);\n  }\n  constructor(_googleMap, _elementRef, _ngZone) {\n    this._googleMap = _googleMap;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._position = new BehaviorSubject(undefined);\n    this._destroy = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n    this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n    this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n    this.domready = this._eventManager.getLazyEmitter('domready');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    /** Event emitted when the info window is initialized. */\n    this.infoWindowInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.InfoWindow) {\n          this._initialize(google.maps.InfoWindow, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            google.maps.importLibrary('maps').then(lib => {\n              this._initialize(lib.InfoWindow, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(infoWindowConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.infoWindow = new infoWindowConstructor(options);\n      this._eventManager.setTarget(this.infoWindow);\n      this.infoWindowInitialized.emit(this.infoWindow);\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent() {\n    this._assertInitialized();\n    return this.infoWindow.getContent() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition() {\n    this._assertInitialized();\n    return this.infoWindow.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n  /**\n   * Opens the MapInfoWindow using the provided AdvancedMarkerElement.\n   * @deprecated Use the `open` method instead.\n   * @breaking-change 20.0.0\n   */\n  openAdvancedMarkerElement(advancedMarkerElement, content) {\n    this.open({\n      getAnchor: () => advancedMarkerElement\n    }, undefined, content);\n  }\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor, shouldFocus, content) {\n    this._assertInitialized();\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && anchor && !anchor.getAnchor) {\n      throw new Error('Specified anchor does not implement the `getAnchor` method. ' + 'It cannot be used to open an info window.');\n    }\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n    // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n      if (content) {\n        this.infoWindow.setContent(content);\n      }\n      this.infoWindow.open({\n        map: this._googleMap.googleMap,\n        anchor: anchorObject,\n        shouldFocus\n      });\n    }\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n  _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.infoWindow) {\n        throw Error('Cannot interact with a Google Map Info Window before it has been ' + 'initialized. Please wait for the Info Window to load before trying to interact with ' + 'it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapInfoWindow_Factory(t) {\n    return new (t || MapInfoWindow)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapInfoWindow,\n    selectors: [[\"map-info-window\"]],\n    hostAttrs: [2, \"display\", \"none\"],\n    inputs: {\n      options: \"options\",\n      position: \"position\"\n    },\n    outputs: {\n      closeclick: \"closeclick\",\n      contentChanged: \"contentChanged\",\n      domready: \"domready\",\n      positionChanged: \"positionChanged\",\n      zindexChanged: \"zindexChanged\",\n      infoWindowInitialized: \"infoWindowInitialized\"\n    },\n    exportAs: [\"mapInfoWindow\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapInfoWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'map-info-window',\n      exportAs: 'mapInfoWindow',\n      standalone: true,\n      host: {\n        'style': 'display: none'\n      }\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    closeclick: [{\n      type: Output\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    domready: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }],\n    infoWindowInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set url(url) {\n    this._url.next(url);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._url = new BehaviorSubject('');\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n     */\n    this.kmlClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml\n     * #KmlLayer.defaultviewport_changed\n     */\n    this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n     */\n    this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n    /** Event emitted when the KML layer is initialized. */\n    this.kmlLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.KmlLayer && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.KmlLayer, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.KmlLayer, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, layerConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.kmlLayer = new layerConstructor(options);\n      this._assertInitialized();\n      this.kmlLayer.setMap(map);\n      this._eventManager.setTarget(this.kmlLayer);\n      this.kmlLayerInitialized.emit(this.kmlLayer);\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.kmlLayer?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport() {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata() {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus() {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl() {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions = {\n        ...options,\n        url: url || options.url\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.kmlLayer) {\n        throw Error('Cannot interact with a Google Map KmlLayer before it has been ' + 'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapKmlLayer_Factory(t) {\n    return new (t || MapKmlLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapKmlLayer,\n    selectors: [[\"map-kml-layer\"]],\n    inputs: {\n      options: \"options\",\n      url: \"url\"\n    },\n    outputs: {\n      kmlClick: \"kmlClick\",\n      defaultviewportChanged: \"defaultviewportChanged\",\n      statusChanged: \"statusChanged\",\n      kmlLayerInitialized: \"kmlLayerInitialized\"\n    },\n    exportAs: [\"mapKmlLayer\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-kml-layer',\n      exportAs: 'mapKmlLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    kmlClick: [{\n      type: Output\n    }],\n    defaultviewportChanged: [{\n      type: Output\n    }],\n    statusChanged: [{\n      type: Output\n    }],\n    kmlLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS$1 = {\n  position: {\n    lat: 37.421995,\n    lng: -122.084092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n  set title(title) {\n    this._title = title;\n  }\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n  set position(position) {\n    this._position = position;\n  }\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n  set label(label) {\n    this._label = label;\n  }\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n  set clickable(clickable) {\n    this._clickable = clickable;\n  }\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n  set icon(icon) {\n    this._icon = icon;\n  }\n  /**\n   * Whether the marker is visible.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n   */\n  set visible(value) {\n    this._visible = value;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n    this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n    this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n    this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n    this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n    this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n    this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n    this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n    this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n    this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n    this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n    this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    /** Event emitted when the marker is initialized. */\n    this.markerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (!this._googleMap._isBrowser) {\n      return;\n    }\n    if (google.maps.Marker && this._googleMap.googleMap) {\n      this._initialize(this._googleMap.googleMap, google.maps.Marker);\n    } else {\n      this._ngZone.runOutsideAngular(() => {\n        Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('marker')]).then(([map, lib]) => {\n          this._initialize(map, lib.Marker);\n        });\n      });\n    }\n  }\n  _initialize(map, markerConstructor) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.marker = new markerConstructor(this._combineOptions());\n      this._assertInitialized();\n      this.marker.setMap(map);\n      this._eventManager.setTarget(this.marker);\n      this.markerInitialized.next(this.marker);\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      marker,\n      _title,\n      _position,\n      _label,\n      _clickable,\n      _icon,\n      _visible\n    } = this;\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n      if (changes['visible'] && _visible !== undefined) {\n        marker.setVisible(_visible);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.markerInitialized.complete();\n    this._eventManager.destroy();\n    this.marker?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation() {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable() {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor() {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon() {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel() {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity() {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition() {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape() {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle() {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor() {\n    this._assertInitialized();\n    return this.marker;\n  }\n  /** Returns a promise that resolves when the marker has been initialized. */\n  _resolveMarker() {\n    return this.marker ? Promise.resolve(this.marker) : this.markerInitialized.pipe(take(1)).toPromise();\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  _combineOptions() {\n    const options = this._options || DEFAULT_MARKER_OPTIONS$1;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable ?? options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon,\n      visible: this._visible ?? options.visible\n    };\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.marker) {\n        throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapMarker_Factory(t) {\n    return new (t || MapMarker)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapMarker,\n    selectors: [[\"map-marker\"]],\n    inputs: {\n      title: \"title\",\n      position: \"position\",\n      label: \"label\",\n      clickable: \"clickable\",\n      options: \"options\",\n      icon: \"icon\",\n      visible: \"visible\"\n    },\n    outputs: {\n      animationChanged: \"animationChanged\",\n      mapClick: \"mapClick\",\n      clickableChanged: \"clickableChanged\",\n      cursorChanged: \"cursorChanged\",\n      mapDblclick: \"mapDblclick\",\n      mapDrag: \"mapDrag\",\n      mapDragend: \"mapDragend\",\n      draggableChanged: \"draggableChanged\",\n      mapDragstart: \"mapDragstart\",\n      flatChanged: \"flatChanged\",\n      iconChanged: \"iconChanged\",\n      mapMousedown: \"mapMousedown\",\n      mapMouseout: \"mapMouseout\",\n      mapMouseover: \"mapMouseover\",\n      mapMouseup: \"mapMouseup\",\n      positionChanged: \"positionChanged\",\n      mapRightclick: \"mapRightclick\",\n      shapeChanged: \"shapeChanged\",\n      titleChanged: \"titleChanged\",\n      visibleChanged: \"visibleChanged\",\n      zindexChanged: \"zindexChanged\",\n      markerInitialized: \"markerInitialized\"\n    },\n    exportAs: [\"mapMarker\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'map-marker',\n      exportAs: 'mapMarker',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    title: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    animationChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    clickableChanged: [{\n      type: Output\n    }],\n    cursorChanged: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    draggableChanged: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    flatChanged: [{\n      type: Output\n    }],\n    iconChanged: [{\n      type: Output\n    }],\n    mapMousedown: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    mapMouseup: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    shapeChanged: [{\n      type: Output\n    }],\n    titleChanged: [{\n      type: Output\n    }],\n    visibleChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }],\n    markerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n  set averageCenter(averageCenter) {\n    this._averageCenter = averageCenter;\n  }\n  set batchSizeIE(batchSizeIE) {\n    this._batchSizeIE = batchSizeIE;\n  }\n  set calculator(calculator) {\n    this._calculator = calculator;\n  }\n  set clusterClass(clusterClass) {\n    this._clusterClass = clusterClass;\n  }\n  set enableRetinaIcons(enableRetinaIcons) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n  set gridSize(gridSize) {\n    this._gridSize = gridSize;\n  }\n  set ignoreHidden(ignoreHidden) {\n    this._ignoreHidden = ignoreHidden;\n  }\n  set imageExtension(imageExtension) {\n    this._imageExtension = imageExtension;\n  }\n  set imagePath(imagePath) {\n    this._imagePath = imagePath;\n  }\n  set imageSizes(imageSizes) {\n    this._imageSizes = imageSizes;\n  }\n  set maxZoom(maxZoom) {\n    this._maxZoom = maxZoom;\n  }\n  set minimumClusterSize(minimumClusterSize) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n  set styles(styles) {\n    this._styles = styles;\n  }\n  set title(title) {\n    this._title = title;\n  }\n  set zIndex(zIndex) {\n    this._zIndex = zIndex;\n  }\n  set zoomOnClick(zoomOnClick) {\n    this._zoomOnClick = zoomOnClick;\n  }\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._currentMarkers = new Set();\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._destroy = new Subject();\n    this.ariaLabelFn = () => '';\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/\n     * _google_markerclustererplus.html#clusteringbegin\n     */\n    this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n     */\n    this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n    this.clusterClick = this._eventManager.getLazyEmitter('click');\n    /** Event emitted when the clusterer is initialized. */\n    this.markerClustererInitialized = new EventEmitter();\n    this._canInitialize = _googleMap._isBrowser;\n  }\n  ngOnInit() {\n    if (this._canInitialize) {\n      this._ngZone.runOutsideAngular(() => {\n        this._googleMap._resolveMap().then(map => {\n          if (typeof MarkerClusterer !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' + 'Please install the MarkerClustererPlus library: ' + 'https://github.com/googlemaps/js-markerclustererplus');\n          }\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          this.markerClusterer = this._ngZone.runOutsideAngular(() => {\n            return new MarkerClusterer(map, [], this._combineOptions());\n          });\n          this._assertInitialized();\n          this._eventManager.setTarget(this.markerClusterer);\n          this.markerClustererInitialized.emit(this.markerClusterer);\n        });\n      });\n    }\n  }\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      if (this.markerClusterer) {\n        this._watchForMarkerChanges();\n      } else {\n        this.markerClustererInitialized.pipe(take(1), takeUntil(this._destroy)).subscribe(() => this._watchForMarkerChanges());\n      }\n    }\n  }\n  ngOnChanges(changes) {\n    const {\n      markerClusterer: clusterer,\n      ariaLabelFn,\n      _averageCenter,\n      _batchSizeIE,\n      _calculator,\n      _styles,\n      _clusterClass,\n      _enableRetinaIcons,\n      _gridSize,\n      _ignoreHidden,\n      _imageExtension,\n      _imagePath,\n      _imageSizes,\n      _maxZoom,\n      _minimumClusterSize,\n      _title,\n      _zIndex,\n      _zoomOnClick\n    } = this;\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    this.markerClusterer?.setMap(null);\n  }\n  fitMapToMarkers(padding) {\n    this._assertInitialized();\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n  getAverageCenter() {\n    this._assertInitialized();\n    return this.markerClusterer.getAverageCenter();\n  }\n  getBatchSizeIE() {\n    this._assertInitialized();\n    return this.markerClusterer.getBatchSizeIE();\n  }\n  getCalculator() {\n    this._assertInitialized();\n    return this.markerClusterer.getCalculator();\n  }\n  getClusterClass() {\n    this._assertInitialized();\n    return this.markerClusterer.getClusterClass();\n  }\n  getClusters() {\n    this._assertInitialized();\n    return this.markerClusterer.getClusters();\n  }\n  getEnableRetinaIcons() {\n    this._assertInitialized();\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n  getGridSize() {\n    this._assertInitialized();\n    return this.markerClusterer.getGridSize();\n  }\n  getIgnoreHidden() {\n    this._assertInitialized();\n    return this.markerClusterer.getIgnoreHidden();\n  }\n  getImageExtension() {\n    this._assertInitialized();\n    return this.markerClusterer.getImageExtension();\n  }\n  getImagePath() {\n    this._assertInitialized();\n    return this.markerClusterer.getImagePath();\n  }\n  getImageSizes() {\n    this._assertInitialized();\n    return this.markerClusterer.getImageSizes();\n  }\n  getMaxZoom() {\n    this._assertInitialized();\n    return this.markerClusterer.getMaxZoom();\n  }\n  getMinimumClusterSize() {\n    this._assertInitialized();\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n  getStyles() {\n    this._assertInitialized();\n    return this.markerClusterer.getStyles();\n  }\n  getTitle() {\n    this._assertInitialized();\n    return this.markerClusterer.getTitle();\n  }\n  getTotalClusters() {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalClusters();\n  }\n  getTotalMarkers() {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalMarkers();\n  }\n  getZIndex() {\n    this._assertInitialized();\n    return this.markerClusterer.getZIndex();\n  }\n  getZoomOnClick() {\n    this._assertInitialized();\n    return this.markerClusterer.getZoomOnClick();\n  }\n  _combineOptions() {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return {\n      ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick\n    };\n  }\n  _watchForMarkerChanges() {\n    this._assertInitialized();\n    this._ngZone.runOutsideAngular(() => {\n      this._getInternalMarkers(this._markers).then(markers => {\n        const initialMarkers = [];\n        for (const marker of markers) {\n          this._currentMarkers.add(marker);\n          initialMarkers.push(marker);\n        }\n        this.markerClusterer.addMarkers(initialMarkers);\n      });\n    });\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(markerComponents => {\n      this._assertInitialized();\n      this._ngZone.runOutsideAngular(() => {\n        this._getInternalMarkers(markerComponents).then(markers => {\n          const newMarkers = new Set(markers);\n          const markersToAdd = [];\n          const markersToRemove = [];\n          for (const marker of Array.from(newMarkers)) {\n            if (!this._currentMarkers.has(marker)) {\n              this._currentMarkers.add(marker);\n              markersToAdd.push(marker);\n            }\n          }\n          for (const marker of Array.from(this._currentMarkers)) {\n            if (!newMarkers.has(marker)) {\n              markersToRemove.push(marker);\n            }\n          }\n          this.markerClusterer.addMarkers(markersToAdd, true);\n          this.markerClusterer.removeMarkers(markersToRemove, true);\n          this.markerClusterer.repaint();\n          for (const marker of markersToRemove) {\n            this._currentMarkers.delete(marker);\n          }\n        });\n      });\n    });\n  }\n  _getInternalMarkers(markers) {\n    return Promise.all(markers.map(markerComponent => markerComponent._resolveMarker()));\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.markerClusterer) {\n        throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapMarkerClusterer_Factory(t) {\n    return new (t || MapMarkerClusterer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MapMarkerClusterer,\n    selectors: [[\"map-marker-clusterer\"]],\n    contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MapMarker, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._markers = _t);\n      }\n    },\n    inputs: {\n      ariaLabelFn: \"ariaLabelFn\",\n      averageCenter: \"averageCenter\",\n      batchSize: \"batchSize\",\n      batchSizeIE: \"batchSizeIE\",\n      calculator: \"calculator\",\n      clusterClass: \"clusterClass\",\n      enableRetinaIcons: \"enableRetinaIcons\",\n      gridSize: \"gridSize\",\n      ignoreHidden: \"ignoreHidden\",\n      imageExtension: \"imageExtension\",\n      imagePath: \"imagePath\",\n      imageSizes: \"imageSizes\",\n      maxZoom: \"maxZoom\",\n      minimumClusterSize: \"minimumClusterSize\",\n      styles: \"styles\",\n      title: \"title\",\n      zIndex: \"zIndex\",\n      zoomOnClick: \"zoomOnClick\",\n      options: \"options\"\n    },\n    outputs: {\n      clusteringbegin: \"clusteringbegin\",\n      clusteringend: \"clusteringend\",\n      clusterClick: \"clusterClick\",\n      markerClustererInitialized: \"markerClustererInitialized\"\n    },\n    exportAs: [\"mapMarkerClusterer\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MapMarkerClusterer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarkerClusterer, [{\n    type: Component,\n    args: [{\n      selector: 'map-marker-clusterer',\n      exportAs: 'mapMarkerClusterer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: '<ng-content />',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    ariaLabelFn: [{\n      type: Input\n    }],\n    averageCenter: [{\n      type: Input\n    }],\n    batchSize: [{\n      type: Input\n    }],\n    batchSizeIE: [{\n      type: Input\n    }],\n    calculator: [{\n      type: Input\n    }],\n    clusterClass: [{\n      type: Input\n    }],\n    enableRetinaIcons: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    ignoreHidden: [{\n      type: Input\n    }],\n    imageExtension: [{\n      type: Input\n    }],\n    imagePath: [{\n      type: Input\n    }],\n    imageSizes: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    minimumClusterSize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    zoomOnClick: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    clusteringbegin: [{\n      type: Output\n    }],\n    clusteringend: [{\n      type: Output\n    }],\n    clusterClick: [{\n      type: Output\n    }],\n    _markers: [{\n      type: ContentChildren,\n      args: [MapMarker, {\n        descendants: true\n      }]\n    }],\n    markerClustererInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set paths(paths) {\n    this._paths.next(paths);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._paths = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n     */\n    this.polygonClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n     */\n    this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n     */\n    this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n     */\n    this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n     */\n    this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n     */\n    this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n     */\n    this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n     */\n    this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n     */\n    this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n     */\n    this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n     */\n    this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the polygon is initialized. */\n    this.polygonInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.Polygon && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.Polygon, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.Polygon, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, polygonConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.polygon = new polygonConstructor(options);\n      this._assertInitialized();\n      this.polygon.setMap(map);\n      this._eventManager.setTarget(this.polygon);\n      this.polygonInitialized.emit(this.polygon);\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.polygon?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath() {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths() {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions = {\n        ...options,\n        paths: paths || options.paths\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n  _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.polygon) {\n        throw Error('Cannot interact with a Google Map Polygon before it has been ' + 'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapPolygon_Factory(t) {\n    return new (t || MapPolygon)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapPolygon,\n    selectors: [[\"map-polygon\"]],\n    inputs: {\n      options: \"options\",\n      paths: \"paths\"\n    },\n    outputs: {\n      polygonClick: \"polygonClick\",\n      polygonDblclick: \"polygonDblclick\",\n      polygonDrag: \"polygonDrag\",\n      polygonDragend: \"polygonDragend\",\n      polygonDragstart: \"polygonDragstart\",\n      polygonMousedown: \"polygonMousedown\",\n      polygonMousemove: \"polygonMousemove\",\n      polygonMouseout: \"polygonMouseout\",\n      polygonMouseover: \"polygonMouseover\",\n      polygonMouseup: \"polygonMouseup\",\n      polygonRightclick: \"polygonRightclick\",\n      polygonInitialized: \"polygonInitialized\"\n    },\n    exportAs: [\"mapPolygon\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polygon',\n      exportAs: 'mapPolygon',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polygonClick: [{\n      type: Output\n    }],\n    polygonDblclick: [{\n      type: Output\n    }],\n    polygonDrag: [{\n      type: Output\n    }],\n    polygonDragend: [{\n      type: Output\n    }],\n    polygonDragstart: [{\n      type: Output\n    }],\n    polygonMousedown: [{\n      type: Output\n    }],\n    polygonMousemove: [{\n      type: Output\n    }],\n    polygonMouseout: [{\n      type: Output\n    }],\n    polygonMouseover: [{\n      type: Output\n    }],\n    polygonMouseup: [{\n      type: Output\n    }],\n    polygonRightclick: [{\n      type: Output\n    }],\n    polygonInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set path(path) {\n    this._path.next(path);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._path = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n     */\n    this.polylineClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n     */\n    this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n     */\n    this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n     */\n    this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n     */\n    this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n     */\n    this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n     */\n    this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n     */\n    this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n     */\n    this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n     */\n    this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n     */\n    this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the polyline is initialized. */\n    this.polylineInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.Polyline && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.Polyline, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.Polyline, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, polylineConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.polyline = new polylineConstructor(options);\n      this._assertInitialized();\n      this.polyline.setMap(map);\n      this._eventManager.setTarget(this.polyline);\n      this.polylineInitialized.emit(this.polyline);\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.polyline?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath() {\n    this._assertInitialized();\n    return this.polyline.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions = {\n        ...options,\n        path: path || options.path\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n  _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.polyline) {\n        throw Error('Cannot interact with a Google Map Polyline before it has been ' + 'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapPolyline_Factory(t) {\n    return new (t || MapPolyline)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapPolyline,\n    selectors: [[\"map-polyline\"]],\n    inputs: {\n      options: \"options\",\n      path: \"path\"\n    },\n    outputs: {\n      polylineClick: \"polylineClick\",\n      polylineDblclick: \"polylineDblclick\",\n      polylineDrag: \"polylineDrag\",\n      polylineDragend: \"polylineDragend\",\n      polylineDragstart: \"polylineDragstart\",\n      polylineMousedown: \"polylineMousedown\",\n      polylineMousemove: \"polylineMousemove\",\n      polylineMouseout: \"polylineMouseout\",\n      polylineMouseover: \"polylineMouseover\",\n      polylineMouseup: \"polylineMouseup\",\n      polylineRightclick: \"polylineRightclick\",\n      polylineInitialized: \"polylineInitialized\"\n    },\n    exportAs: [\"mapPolyline\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polyline',\n      exportAs: 'mapPolyline',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    polylineClick: [{\n      type: Output\n    }],\n    polylineDblclick: [{\n      type: Output\n    }],\n    polylineDrag: [{\n      type: Output\n    }],\n    polylineDragend: [{\n      type: Output\n    }],\n    polylineDragstart: [{\n      type: Output\n    }],\n    polylineMousedown: [{\n      type: Output\n    }],\n    polylineMousemove: [{\n      type: Output\n    }],\n    polylineMouseout: [{\n      type: Output\n    }],\n    polylineMouseover: [{\n      type: Output\n    }],\n    polylineMouseup: [{\n      type: Output\n    }],\n    polylineRightclick: [{\n      type: Output\n    }],\n    polylineInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n     */\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n     */\n    this.rectangleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n     */\n    this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n     */\n    this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n     */\n    this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n     */\n    this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n     */\n    this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n     */\n    this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n     */\n    this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n     */\n    this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n     */\n    this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n     */\n    this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the rectangle is initialized. */\n    this.rectangleInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.Rectangle && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.Rectangle, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.Rectangle, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, rectangleConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.rectangle = new rectangleConstructor(options);\n      this._assertInitialized();\n      this.rectangle.setMap(map);\n      this._eventManager.setTarget(this.rectangle);\n      this.rectangleInitialized.emit(this.rectangle);\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.rectangle?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions = {\n        ...options,\n        bounds: bounds || options.bounds\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n  _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.rectangle) {\n        throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' + 'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapRectangle_Factory(t) {\n    return new (t || MapRectangle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapRectangle,\n    selectors: [[\"map-rectangle\"]],\n    inputs: {\n      options: \"options\",\n      bounds: \"bounds\"\n    },\n    outputs: {\n      boundsChanged: \"boundsChanged\",\n      rectangleClick: \"rectangleClick\",\n      rectangleDblclick: \"rectangleDblclick\",\n      rectangleDrag: \"rectangleDrag\",\n      rectangleDragend: \"rectangleDragend\",\n      rectangleDragstart: \"rectangleDragstart\",\n      rectangleMousedown: \"rectangleMousedown\",\n      rectangleMousemove: \"rectangleMousemove\",\n      rectangleMouseout: \"rectangleMouseout\",\n      rectangleMouseover: \"rectangleMouseover\",\n      rectangleMouseup: \"rectangleMouseup\",\n      rectangleRightclick: \"rectangleRightclick\",\n      rectangleInitialized: \"rectangleInitialized\"\n    },\n    exportAs: [\"mapRectangle\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-rectangle',\n      exportAs: 'mapRectangle',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblclick: [{\n      type: Output\n    }],\n    rectangleDrag: [{\n      type: Output\n    }],\n    rectangleDragend: [{\n      type: Output\n    }],\n    rectangleDragstart: [{\n      type: Output\n    }],\n    rectangleMousedown: [{\n      type: Output\n    }],\n    rectangleMousemove: [{\n      type: Output\n    }],\n    rectangleMouseout: [{\n      type: Output\n    }],\n    rectangleMouseover: [{\n      type: Output\n    }],\n    rectangleMouseup: [{\n      type: Output\n    }],\n    rectangleRightclick: [{\n      type: Output\n    }],\n    rectangleInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  set autoRefresh(autoRefresh) {\n    this._autoRefresh.next(autoRefresh);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._autoRefresh = new BehaviorSubject(true);\n    this._destroyed = new Subject();\n    /** Event emitted when the traffic layer is initialized. */\n    this.trafficLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.TrafficLayer && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.TrafficLayer, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.TrafficLayer, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, layerConstructor, options) {\n    this._ngZone.runOutsideAngular(() => {\n      this.trafficLayer = new layerConstructor(options);\n      this._assertInitialized();\n      this.trafficLayer.setMap(map);\n      this.trafficLayerInitialized.emit(this.trafficLayer);\n      this._watchForAutoRefreshChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.trafficLayer?.setMap(null);\n  }\n  _combineOptions() {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions = {\n        autoRefresh\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.trafficLayer.setOptions(options);\n    });\n  }\n  _assertInitialized() {\n    if (!this.trafficLayer) {\n      throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' + 'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function MapTrafficLayer_Factory(t) {\n    return new (t || MapTrafficLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapTrafficLayer,\n    selectors: [[\"map-traffic-layer\"]],\n    inputs: {\n      autoRefresh: \"autoRefresh\"\n    },\n    outputs: {\n      trafficLayerInitialized: \"trafficLayerInitialized\"\n    },\n    exportAs: [\"mapTrafficLayer\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTrafficLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-traffic-layer',\n      exportAs: 'mapTrafficLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    autoRefresh: [{\n      type: Input\n    }],\n    trafficLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer {\n  constructor() {\n    this._map = inject(GoogleMap);\n    this._zone = inject(NgZone);\n    /** Event emitted when the transit layer is initialized. */\n    this.transitLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      if (google.maps.TransitLayer && this._map.googleMap) {\n        this._initialize(this._map.googleMap, google.maps.TransitLayer);\n      } else {\n        this._zone.runOutsideAngular(() => {\n          Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n            this._initialize(map, lib.TransitLayer);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, layerConstructor) {\n    this._zone.runOutsideAngular(() => {\n      this.transitLayer = new layerConstructor();\n      this.transitLayerInitialized.emit(this.transitLayer);\n      this._assertLayerInitialized();\n      this.transitLayer.setMap(map);\n    });\n  }\n  ngOnDestroy() {\n    this.transitLayer?.setMap(null);\n  }\n  _assertLayerInitialized() {\n    if (!this.transitLayer) {\n      throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function MapTransitLayer_Factory(t) {\n    return new (t || MapTransitLayer)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapTransitLayer,\n    selectors: [[\"map-transit-layer\"]],\n    outputs: {\n      transitLayerInitialized: \"transitLayerInitialized\"\n    },\n    exportAs: [\"mapTransitLayer\"],\n    standalone: true\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-transit-layer',\n      exportAs: 'mapTransitLayer',\n      standalone: true\n    }]\n  }], null, {\n    transitLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  set data(data) {\n    this._data = data;\n  }\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    /** Event emitted when the heatmap is initialized. */\n    this.heatmapInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && !window.google?.maps.importLibrary && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' + 'Please install the Google Maps JavaScript API with the \"visualization\" library: ' + 'https://developers.google.com/maps/documentation/javascript/visualization');\n      }\n      if (google.maps.visualization?.HeatmapLayer && this._googleMap.googleMap) {\n        this._initialize(this._googleMap.googleMap, google.maps.visualization.HeatmapLayer);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('visualization')]).then(([map, lib]) => {\n            this._initialize(map, lib.HeatmapLayer);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, heatmapConstructor) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.heatmap = new heatmapConstructor(this._combineOptions());\n      this._assertInitialized();\n      this.heatmap.setMap(map);\n      this.heatmapInitialized.emit(this.heatmap);\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      _data,\n      heatmap\n    } = this;\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.heatmap?.setMap(null);\n  }\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n  getData() {\n    this._assertInitialized();\n    return this.heatmap.getData();\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap\n    };\n  }\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n  _normalizeData(data) {\n    const result = [];\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n    return result;\n  }\n  /** Asserts that the heatmap object has been initialized. */\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.heatmap) {\n        throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' + 'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapHeatmapLayer_Factory(t) {\n    return new (t || MapHeatmapLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapHeatmapLayer,\n    selectors: [[\"map-heatmap-layer\"]],\n    inputs: {\n      data: \"data\",\n      options: \"options\"\n    },\n    outputs: {\n      heatmapInitialized: \"heatmapInitialized\"\n    },\n    exportAs: [\"mapHeatmapLayer\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapHeatmapLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-heatmap-layer',\n      exportAs: 'mapHeatmapLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    heatmapInitialized: [{\n      type: Output\n    }]\n  });\n})();\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n  position: {\n    lat: 37.221995,\n    lng: -122.184092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapAdvancedMarker {\n  /**\n   * Rollover text. If provided, an accessibility text (e.g. for use with screen readers) will be added to the AdvancedMarkerElement with the provided value.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.title\n   */\n  set title(title) {\n    this._title = title;\n  }\n  /**\n   * Sets the AdvancedMarkerElement's position. An AdvancedMarkerElement may be constructed without a position, but will not be displayed until its position is provided - for example, by a user's actions or choices. An AdvancedMarkerElement's position can be provided by setting AdvancedMarkerElement.position if not provided at the construction.\n   * Note: AdvancedMarkerElement with altitude is only supported on vector maps.\n   * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.position\n   */\n  set position(position) {\n    this._position = position;\n  }\n  /**\n   * The DOM Element backing the visual of an AdvancedMarkerElement.\n   * Note: AdvancedMarkerElement does not clone the passed-in DOM element. Once the DOM element is passed to an AdvancedMarkerElement, passing the same DOM element to another AdvancedMarkerElement will move the DOM element and cause the previous AdvancedMarkerElement to look empty.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.content\n   */\n  set content(content) {\n    this._content = content;\n  }\n  /**\n   * If true, the AdvancedMarkerElement can be dragged.\n   * Note: AdvancedMarkerElement with altitude is not draggable.\n   * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.gmpDraggable\n   */\n  set gmpDraggable(draggable) {\n    this._draggable = draggable;\n  }\n  /**\n   * Options for constructing an AdvancedMarkerElement.\n   * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  /**\n   * AdvancedMarkerElements on the map are prioritized by zIndex, with higher values indicating higher display.\n   * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.zIndex\n   */\n  set zIndex(zIndex) {\n    this._zIndex = zIndex;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * This event is fired when the AdvancedMarkerElement element is clicked.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * This event is repeatedly fired while the user drags the AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.drag\n     */\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * This event is fired when the user stops dragging the AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.dragend\n     */\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * This event is fired when the user starts dragging the AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.dragstart\n     */\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /** Event emitted when the marker is initialized. */\n    this.markerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (!this._googleMap._isBrowser) {\n      return;\n    }\n    if (google.maps.marker?.AdvancedMarkerElement && this._googleMap.googleMap) {\n      this._initialize(this._googleMap.googleMap, google.maps.marker.AdvancedMarkerElement);\n    } else {\n      this._ngZone.runOutsideAngular(() => {\n        Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('marker')]).then(([map, lib]) => {\n          this._initialize(map, lib.AdvancedMarkerElement);\n        });\n      });\n    }\n  }\n  _initialize(map, advancedMarkerConstructor) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.advancedMarker = new advancedMarkerConstructor(this._combineOptions());\n      this._assertInitialized();\n      this.advancedMarker.map = map;\n      this._eventManager.setTarget(this.advancedMarker);\n      this.markerInitialized.next(this.advancedMarker);\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      advancedMarker,\n      _content,\n      _position,\n      _title,\n      _draggable,\n      _zIndex\n    } = this;\n    if (advancedMarker) {\n      if (changes['title']) {\n        advancedMarker.title = _title;\n      }\n      if (changes['content']) {\n        advancedMarker.content = _content;\n      }\n      if (changes['gmpDraggable']) {\n        advancedMarker.gmpDraggable = _draggable;\n      }\n      if (changes['content']) {\n        advancedMarker.content = _content;\n      }\n      if (changes['position']) {\n        advancedMarker.position = _position;\n      }\n      if (changes['zIndex']) {\n        advancedMarker.zIndex = _zIndex;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.markerInitialized.complete();\n    this._eventManager.destroy();\n    if (this.advancedMarker) {\n      this.advancedMarker.map = null;\n    }\n  }\n  getAnchor() {\n    this._assertInitialized();\n    return this.advancedMarker;\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  _combineOptions() {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      content: this._content || options.content,\n      zIndex: this._zIndex ?? options.zIndex,\n      gmpDraggable: this._draggable ?? options.gmpDraggable,\n      map: this._googleMap.googleMap\n    };\n  }\n  /** Asserts that the map has been initialized. */\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.advancedMarker) {\n        throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapAdvancedMarker_Factory(t) {\n    return new (t || MapAdvancedMarker)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapAdvancedMarker,\n    selectors: [[\"map-advanced-marker\"]],\n    inputs: {\n      title: \"title\",\n      position: \"position\",\n      content: \"content\",\n      gmpDraggable: \"gmpDraggable\",\n      options: \"options\",\n      zIndex: \"zIndex\"\n    },\n    outputs: {\n      mapClick: \"mapClick\",\n      mapDrag: \"mapDrag\",\n      mapDragend: \"mapDragend\",\n      mapDragstart: \"mapDragstart\",\n      markerInitialized: \"markerInitialized\"\n    },\n    exportAs: [\"mapAdvancedMarker\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapAdvancedMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'map-advanced-marker',\n      exportAs: 'mapAdvancedMarker',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    title: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    gmpDraggable: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    markerInitialized: [{\n      type: Output\n    }]\n  });\n})();\nconst COMPONENTS = [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapAdvancedMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer];\nclass GoogleMapsModule {\n  static #_ = this.ɵfac = function GoogleMapsModule_Factory(t) {\n    return new (t || GoogleMapsModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: GoogleMapsModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMapsModule, [{\n    type: NgModule,\n    args: [{\n      imports: COMPONENTS,\n      exports: COMPONENTS\n    }]\n  }], null, null);\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n  route(request) {\n    return new Observable(observer => {\n      this._getService().then(service => {\n        service.route(request, (result, status) => {\n          this._ngZone.run(() => {\n            observer.next({\n              result: result || undefined,\n              status\n            });\n            observer.complete();\n          });\n        });\n      });\n    });\n  }\n  _getService() {\n    if (!this._directionsService) {\n      if (google.maps.DirectionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      } else {\n        return google.maps.importLibrary('routes').then(lib => {\n          this._directionsService = new lib.DirectionsService();\n          return this._directionsService;\n        });\n      }\n    }\n    return Promise.resolve(this._directionsService);\n  }\n  static #_ = this.ɵfac = function MapDirectionsService_Factory(t) {\n    return new (t || MapDirectionsService)(i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MapDirectionsService,\n    factory: MapDirectionsService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }], null);\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n  geocode(request) {\n    return new Observable(observer => {\n      this._getGeocoder().then(geocoder => {\n        geocoder.geocode(request, (results, status) => {\n          this._ngZone.run(() => {\n            observer.next({\n              results: results || [],\n              status\n            });\n            observer.complete();\n          });\n        });\n      });\n    });\n  }\n  _getGeocoder() {\n    if (!this._geocoder) {\n      if (google.maps.Geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      } else {\n        return google.maps.importLibrary('geocoding').then(lib => {\n          this._geocoder = new lib.Geocoder();\n          return this._geocoder;\n        });\n      }\n    }\n    return Promise.resolve(this._geocoder);\n  }\n  static #_ = this.ɵfac = function MapGeocoder_Factory(t) {\n    return new (t || MapGeocoder)(i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MapGeocoder,\n    factory: MapGeocoder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapAdvancedMarker, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };","map":{"version":3,"names":["i0","inject","NgZone","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","Directive","ContentChildren","NgModule","Injectable","isPlatformBrowser","BehaviorSubject","Observable","Subject","combineLatest","switchMap","take","map","takeUntil","_c0","MapEventManager","_clearListeners","listener","_listeners","remove","constructor","_ngZone","_pending","_targetStream","undefined","getLazyEmitter","name","pipe","target","observable","observer","push","addListener","event","run","next","complete","setTarget","currentTarget","value","forEach","subscriber","subscribe","destroy","DEFAULT_OPTIONS","center","lat","lng","zoom","mapTypeId","DEFAULT_HEIGHT","DEFAULT_WIDTH","GoogleMap","_center","_zoom","options","_options","_elementRef","platformId","_eventManager","height","width","mapInitialized","authFailure","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","googleMapsWindow","window","google","ngDevMode","Error","_existingAuthFailureCallback","gm_authFailure","emit","ngOnChanges","changes","_setSize","googleMap","setOptions","_combineOptions","setCenter","setZoom","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","maps","Map","_initialize","runOutsideAngular","importLibrary","then","lib","mapConstructor","ngOnDestroy","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","controls","data","mapTypes","overlayMapTypes","_resolveMap","Promise","resolve","toPromise","styles","style","coerceCssPixelValue","mapId","_","ɵfac","GoogleMap_Factory","t","ɵɵdirectiveInject","ElementRef","_2","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","exportAs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","GoogleMap_Template","rf","ctx","ɵɵprojectionDef","ɵɵelement","ɵɵprojection","encapsulation","changeDetection","ɵsetClassMetadata","args","selector","OnPush","None","Object","decorators","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","MapBaseLayer_Factory","ɵdir","ɵɵdefineDirective","MapBicyclingLayer","_zone","bicyclingLayerInitialized","BicyclingLayer","all","layerConstructor","bicyclingLayer","_assertLayerInitialized","setMap","MapBicyclingLayer_Factory","MapCircle","radius","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","circleInitialized","Circle","circleConstructor","circle","_watchForOptionsChanges","_watchForCenterChanges","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","combinedOptions","setRadius","MapCircle_Factory","MapDirectionsRenderer","directions","_directions","_googleMap","directionsChanged","directionsRendererInitialized","DirectionsRenderer","rendererConstructor","directionsRenderer","setDirections","getDirections","getPanel","getRouteIndex","MapDirectionsRenderer_Factory","MapGroundOverlay","url","_url","_bounds","opacity","_opacity","clickable","groundOverlayInitialized","groundOverlay","GroundOverlay","overlayConstructor","getValue","_hasWatchers","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","set","MapGroundOverlay_Factory","MapInfoWindow","position","_position","_destroy","closeclick","contentChanged","domready","positionChanged","zindexChanged","infoWindowInitialized","InfoWindow","infoWindowConstructor","infoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","openAdvancedMarkerElement","advancedMarkerElement","content","open","getAnchor","anchor","shouldFocus","anchorObject","get","display","setContent","setPosition","MapInfoWindow_Factory","hostAttrs","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayerInitialized","KmlLayer","kmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","MapKmlLayer_Factory","DEFAULT_MARKER_OPTIONS$1","MapMarker","title","_title","label","_label","_clickable","icon","_icon","visible","_visible","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","markerInitialized","Marker","markerConstructor","marker","setTitle","setLabel","setClickable","setIcon","setVisible","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","_resolveMarker","MapMarker_Factory","DEFAULT_CLUSTERER_OPTIONS","MapMarkerClusterer","averageCenter","_averageCenter","batchSizeIE","_batchSizeIE","calculator","_calculator","clusterClass","_clusterClass","enableRetinaIcons","_enableRetinaIcons","gridSize","_gridSize","ignoreHidden","_ignoreHidden","imageExtension","_imageExtension","imagePath","_imagePath","imageSizes","_imageSizes","maxZoom","_maxZoom","minimumClusterSize","_minimumClusterSize","_styles","zIndex","_zIndex","zoomOnClick","_zoomOnClick","_currentMarkers","Set","ariaLabelFn","clusteringbegin","clusteringend","clusterClick","markerClustererInitialized","_canInitialize","MarkerClusterer","markerClusterer","ngAfterContentInit","_watchForMarkerChanges","clusterer","setAverageCenter","setBatchSizeIE","setCalculator","setClusterClass","setEnableRetinaIcons","setGridSize","setIgnoreHidden","setImageExtension","setImagePath","setImageSizes","setMaxZoom","setMinimumClusterSize","setStyles","setZIndex","setZoomOnClick","fitMapToMarkers","getAverageCenter","getBatchSizeIE","getCalculator","getClusterClass","getClusters","getEnableRetinaIcons","getGridSize","getIgnoreHidden","getImageExtension","getImagePath","getImageSizes","getMaxZoom","getMinimumClusterSize","getStyles","getTotalClusters","getTotalMarkers","getZoomOnClick","batchSize","_getInternalMarkers","_markers","markers","initialMarkers","add","addMarkers","markerComponents","newMarkers","markersToAdd","markersToRemove","Array","from","has","removeMarkers","repaint","delete","markerComponent","MapMarkerClusterer_Factory","contentQueries","MapMarkerClusterer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","MapMarkerClusterer_Template","descendants","MapPolygon","paths","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","polygonInitialized","Polygon","polygonConstructor","polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolygon_Factory","MapPolyline","path","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","polylineInitialized","Polyline","polylineConstructor","polyline","setPath","MapPolyline_Factory","MapRectangle","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangleInitialized","Rectangle","rectangleConstructor","rectangle","_watchForBoundsChanges","setBounds","MapRectangle_Factory","MapTrafficLayer","autoRefresh","_autoRefresh","trafficLayerInitialized","TrafficLayer","trafficLayer","_watchForAutoRefreshChanges","MapTrafficLayer_Factory","MapTransitLayer","transitLayerInitialized","TransitLayer","transitLayer","MapTransitLayer_Factory","MapHeatmapLayer","_data","heatmapInitialized","visualization","HeatmapLayer","heatmapConstructor","heatmap","setData","_normalizeData","getData","result","item","isLatLngLiteral","LatLng","MapHeatmapLayer_Factory","DEFAULT_MARKER_OPTIONS","MapAdvancedMarker","_content","gmpDraggable","draggable","_draggable","AdvancedMarkerElement","advancedMarkerConstructor","advancedMarker","MapAdvancedMarker_Factory","COMPONENTS","GoogleMapsModule","GoogleMapsModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","MapDirectionsService","route","request","_getService","service","status","_directionsService","DirectionsService","MapDirectionsService_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","MapGeocoder","geocode","_getGeocoder","geocoder","results","_geocoder","Geocoder","MapGeocoder_Factory"],"sources":["D:/projekat-pia/front/node_modules/@angular/google-maps/fesm2022/google-maps.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, NgZone, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nclass MapEventManager {\n    /** Clears all currently-registered event listeners. */\n    _clearListeners() {\n        for (const listener of this._listeners) {\n            listener.remove();\n        }\n        this._listeners = [];\n    }\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Pending listeners that were added before the target was set. */\n        this._pending = [];\n        this._listeners = [];\n        this._targetStream = new BehaviorSubject(undefined);\n    }\n    /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n    getLazyEmitter(name) {\n        return this._targetStream.pipe(switchMap(target => {\n            const observable = new Observable(observer => {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!target) {\n                    this._pending.push({ observable, observer });\n                    return undefined;\n                }\n                const listener = target.addListener(name, (event) => {\n                    this._ngZone.run(() => observer.next(event));\n                });\n                // If there's an error when initializing the Maps API (e.g. a wrong API key), it will\n                // return a dummy object that returns `undefined` from `addListener` (see #26514).\n                if (!listener) {\n                    observer.complete();\n                    return undefined;\n                }\n                this._listeners.push(listener);\n                return () => listener.remove();\n            });\n            return observable;\n        }));\n    }\n    /** Sets the current target that the manager should bind events to. */\n    setTarget(target) {\n        const currentTarget = this._targetStream.value;\n        if (target === currentTarget) {\n            return;\n        }\n        // Clear the listeners from the pre-existing target.\n        if (currentTarget) {\n            this._clearListeners();\n            this._pending = [];\n        }\n        this._targetStream.next(target);\n        // Add the listeners that were bound before the map was initialized.\n        this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n        this._pending = [];\n    }\n    /** Destroys the manager and clears the event listeners. */\n    destroy() {\n        this._clearListeners();\n        this._pending = [];\n        this._targetStream.complete();\n    }\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n    center: { lat: 37.421995, lng: -122.084092 },\n    zoom: 17,\n    // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n    mapTypeId: 'roadmap',\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n    set center(center) {\n        this._center = center;\n    }\n    set zoom(zoom) {\n        this._zoom = zoom;\n    }\n    set options(options) {\n        this._options = options || DEFAULT_OPTIONS;\n    }\n    constructor(_elementRef, _ngZone, platformId) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n        this.height = DEFAULT_HEIGHT;\n        /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n        this.width = DEFAULT_WIDTH;\n        this._options = DEFAULT_OPTIONS;\n        /** Event emitted when the map is initialized. */\n        this.mapInitialized = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n         */\n        this.authFailure = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n         */\n        this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n         */\n        this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n         */\n        this.idle = this._eventManager.getLazyEmitter('idle');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n         */\n        this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n         */\n        this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n         */\n        this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n         */\n        this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n         */\n        this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n         */\n        this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n        this._isBrowser = isPlatformBrowser(platformId);\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace google not found, cannot construct embedded google ' +\n                    'map. Please install the Google Maps JavaScript API: ' +\n                    'https://developers.google.com/maps/documentation/javascript/' +\n                    'tutorial#Loading_the_Maps_API');\n            }\n            this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n            googleMapsWindow.gm_authFailure = () => {\n                if (this._existingAuthFailureCallback) {\n                    this._existingAuthFailureCallback();\n                }\n                this.authFailure.emit();\n            };\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['height'] || changes['width']) {\n            this._setSize();\n        }\n        const googleMap = this.googleMap;\n        if (googleMap) {\n            if (changes['options']) {\n                googleMap.setOptions(this._combineOptions());\n            }\n            if (changes['center'] && this._center) {\n                googleMap.setCenter(this._center);\n            }\n            // Note that the zoom can be zero.\n            if (changes['zoom'] && this._zoom != null) {\n                googleMap.setZoom(this._zoom);\n            }\n            if (changes['mapTypeId'] && this.mapTypeId) {\n                googleMap.setMapTypeId(this.mapTypeId);\n            }\n        }\n    }\n    ngOnInit() {\n        // It should be a noop during server-side rendering.\n        if (this._isBrowser) {\n            this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n            this._setSize();\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            if (google.maps.Map) {\n                this._initialize(google.maps.Map);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    google.maps\n                        .importLibrary('maps')\n                        .then(lib => this._initialize(lib.Map));\n                });\n            }\n        }\n    }\n    _initialize(mapConstructor) {\n        this._ngZone.runOutsideAngular(() => {\n            this.googleMap = new mapConstructor(this._mapEl, this._combineOptions());\n            this._eventManager.setTarget(this.googleMap);\n            this.mapInitialized.emit(this.googleMap);\n        });\n    }\n    ngOnDestroy() {\n        this.mapInitialized.complete();\n        this._eventManager.destroy();\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n        }\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds, padding) {\n        this._assertInitialized();\n        this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x, y) {\n        this._assertInitialized();\n        this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng) {\n        this._assertInitialized();\n        this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds, padding) {\n        this._assertInitialized();\n        this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons() {\n        this._assertInitialized();\n        return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading() {\n        this._assertInitialized();\n        return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId() {\n        this._assertInitialized();\n        return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection() {\n        this._assertInitialized();\n        return this.googleMap.getProjection() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView() {\n        this._assertInitialized();\n        return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt() {\n        this._assertInitialized();\n        return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom() {\n        this._assertInitialized();\n        return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls() {\n        this._assertInitialized();\n        return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data() {\n        this._assertInitialized();\n        return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes() {\n        this._assertInitialized();\n        return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes() {\n        this._assertInitialized();\n        return this.googleMap.overlayMapTypes;\n    }\n    /** Returns a promise that resolves when the map has been initialized. */\n    _resolveMap() {\n        return this.googleMap\n            ? Promise.resolve(this.googleMap)\n            : this.mapInitialized.pipe(take(1)).toPromise();\n    }\n    _setSize() {\n        if (this._mapEl) {\n            const styles = this._mapEl.style;\n            styles.height =\n                this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n            styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n        }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            // It's important that we set **some** kind of `center` and `zoom`, otherwise\n            // Google Maps will render a blank rectangle which looks broken.\n            center: this._center || options.center || DEFAULT_OPTIONS.center,\n            zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n            // Passing in an undefined `mapTypeId` seems to break tile loading\n            // so make sure that we have some kind of default (see #22082).\n            mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId,\n            mapId: this.mapId || options.mapId,\n        };\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n        if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: GoogleMap, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: GoogleMap, isStandalone: true, selector: \"google-map\", inputs: { height: \"height\", width: \"width\", mapId: \"mapId\", mapTypeId: \"mapTypeId\", center: \"center\", zoom: \"zoom\", options: \"options\" }, outputs: { mapInitialized: \"mapInitialized\", authFailure: \"authFailure\", boundsChanged: \"boundsChanged\", centerChanged: \"centerChanged\", mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", headingChanged: \"headingChanged\", idle: \"idle\", maptypeidChanged: \"maptypeidChanged\", mapMousemove: \"mapMousemove\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", projectionChanged: \"projectionChanged\", mapRightclick: \"mapRightclick\", tilesloaded: \"tilesloaded\", tiltChanged: \"tiltChanged\", zoomChanged: \"zoomChanged\" }, exportAs: [\"googleMap\"], usesOnChanges: true, ngImport: i0, template: '<div class=\"map-container\"></div><ng-content />', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: GoogleMap, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    standalone: true,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content />',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }], propDecorators: { height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], mapId: [{\n                type: Input\n            }], mapTypeId: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], zoom: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], mapInitialized: [{\n                type: Output\n            }], authFailure: [{\n                type: Output\n            }], boundsChanged: [{\n                type: Output\n            }], centerChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], headingChanged: [{\n                type: Output\n            }], idle: [{\n                type: Output\n            }], maptypeidChanged: [{\n                type: Output\n            }], mapMousemove: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], projectionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], tilesloaded: [{\n                type: Output\n            }], tiltChanged: [{\n                type: Output\n            }], zoomChanged: [{\n                type: Output\n            }] } });\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\nclass MapBaseLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                this._initializeObject();\n            });\n            this._assertInitialized();\n            this._setMap();\n        }\n    }\n    ngOnDestroy() {\n        this._unsetMap();\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    _initializeObject() { }\n    _setMap() { }\n    _unsetMap() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapBaseLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapBaseLayer, isStandalone: true, selector: \"map-base-layer\", exportAs: [\"mapBaseLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapBaseLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }] });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer {\n    constructor() {\n        this._map = inject(GoogleMap);\n        this._zone = inject(NgZone);\n        /** Event emitted when the bicycling layer is initialized. */\n        this.bicyclingLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            if (google.maps.BicyclingLayer && this._map.googleMap) {\n                this._initialize(this._map.googleMap, google.maps.BicyclingLayer);\n            }\n            else {\n                this._zone.runOutsideAngular(() => {\n                    Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                        this._initialize(map, lib.BicyclingLayer);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, layerConstructor) {\n        this._zone.runOutsideAngular(() => {\n            this.bicyclingLayer = new layerConstructor();\n            this.bicyclingLayerInitialized.emit(this.bicyclingLayer);\n            this._assertLayerInitialized();\n            this.bicyclingLayer.setMap(map);\n        });\n    }\n    ngOnDestroy() {\n        this.bicyclingLayer?.setMap(null);\n    }\n    _assertLayerInitialized() {\n        if (!this.bicyclingLayer) {\n            throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapBicyclingLayer, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapBicyclingLayer, isStandalone: true, selector: \"map-bicycling-layer\", outputs: { bicyclingLayerInitialized: \"bicyclingLayerInitialized\" }, exportAs: [\"mapBicyclingLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapBicyclingLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                    standalone: true,\n                }]\n        }], propDecorators: { bicyclingLayerInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set center(center) {\n        this._center.next(center);\n    }\n    set radius(radius) {\n        this._radius.next(radius);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._center = new BehaviorSubject(undefined);\n        this._radius = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n         */\n        this.circleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n         */\n        this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n         */\n        this.circleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n         */\n        this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n         */\n        this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n         */\n        this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n         */\n        this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n         */\n        this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n         */\n        this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n         */\n        this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n         */\n        this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n         */\n        this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the circle is initialized. */\n        this.circleInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this._map._isBrowser) {\n            return;\n        }\n        this._combineOptions()\n            .pipe(take(1))\n            .subscribe(options => {\n            if (google.maps.Circle && this._map.googleMap) {\n                this._initialize(this._map.googleMap, google.maps.Circle, options);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                        this._initialize(map, lib.Circle, options);\n                    });\n                });\n            }\n        });\n    }\n    _initialize(map, circleConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.circle = new circleConstructor(options);\n            this._assertInitialized();\n            this.circle.setMap(map);\n            this._eventManager.setTarget(this.circle);\n            this.circleInitialized.emit(this.circle);\n            this._watchForOptionsChanges();\n            this._watchForCenterChanges();\n            this._watchForRadiusChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.circle?.setMap(null);\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n    getRadius() {\n        this._assertInitialized();\n        return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.circle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n            const combinedOptions = {\n                ...options,\n                center: center || options.center,\n                radius: radius !== undefined ? radius : options.radius,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.circle.setOptions(options);\n        });\n    }\n    _watchForCenterChanges() {\n        this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n            if (center) {\n                this._assertInitialized();\n                this.circle.setCenter(center);\n            }\n        });\n    }\n    _watchForRadiusChanges() {\n        this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n            if (radius !== undefined) {\n                this._assertInitialized();\n                this.circle.setRadius(radius);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.circle) {\n                throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                    'initialized. Please wait for the Circle to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapCircle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapCircle, isStandalone: true, selector: \"map-circle\", inputs: { options: \"options\", center: \"center\", radius: \"radius\" }, outputs: { centerChanged: \"centerChanged\", circleClick: \"circleClick\", circleDblclick: \"circleDblclick\", circleDrag: \"circleDrag\", circleDragend: \"circleDragend\", circleDragstart: \"circleDragstart\", circleMousedown: \"circleMousedown\", circleMousemove: \"circleMousemove\", circleMouseout: \"circleMouseout\", circleMouseover: \"circleMouseover\", circleMouseup: \"circleMouseup\", radiusChanged: \"radiusChanged\", circleRightclick: \"circleRightclick\", circleInitialized: \"circleInitialized\" }, exportAs: [\"mapCircle\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapCircle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], centerChanged: [{\n                type: Output\n            }], circleClick: [{\n                type: Output\n            }], circleDblclick: [{\n                type: Output\n            }], circleDrag: [{\n                type: Output\n            }], circleDragend: [{\n                type: Output\n            }], circleDragstart: [{\n                type: Output\n            }], circleMousedown: [{\n                type: Output\n            }], circleMousemove: [{\n                type: Output\n            }], circleMouseout: [{\n                type: Output\n            }], circleMouseover: [{\n                type: Output\n            }], circleMouseup: [{\n                type: Output\n            }], radiusChanged: [{\n                type: Output\n            }], circleRightclick: [{\n                type: Output\n            }], circleInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions.directions\n     */\n    set directions(directions) {\n        this._directions = directions;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/directions\n         * #DirectionsRenderer.directions_changed\n         */\n        this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n        /** Event emitted when the directions renderer is initialized. */\n        this.directionsRendererInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            if (google.maps.DirectionsRenderer && this._googleMap.googleMap) {\n                this._initialize(this._googleMap.googleMap, google.maps.DirectionsRenderer);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('routes')]).then(([map, lib]) => {\n                        this._initialize(map, lib.DirectionsRenderer);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, rendererConstructor) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.directionsRenderer = new rendererConstructor(this._combineOptions());\n            this._assertInitialized();\n            this.directionsRenderer.setMap(map);\n            this._eventManager.setTarget(this.directionsRenderer);\n            this.directionsRendererInitialized.emit(this.directionsRenderer);\n        });\n    }\n    ngOnChanges(changes) {\n        if (this.directionsRenderer) {\n            if (changes['options']) {\n                this.directionsRenderer.setOptions(this._combineOptions());\n            }\n            if (changes['directions'] && this._directions !== undefined) {\n                this.directionsRenderer.setDirections(this._directions);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this.directionsRenderer?.setMap(null);\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n    getDirections() {\n        this._assertInitialized();\n        return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n    getPanel() {\n        this._assertInitialized();\n        return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n    getRouteIndex() {\n        this._assertInitialized();\n        return this.directionsRenderer.getRouteIndex();\n    }\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            directions: this._directions || options.directions,\n            map: this._googleMap.googleMap,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.directionsRenderer) {\n                throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' +\n                    'initialized. Please wait for the Directions Renderer to load before trying ' +\n                    'to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapDirectionsRenderer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapDirectionsRenderer, isStandalone: true, selector: \"map-directions-renderer\", inputs: { directions: \"directions\", options: \"options\" }, outputs: { directionsChanged: \"directionsChanged\", directionsRendererInitialized: \"directionsRendererInitialized\" }, exportAs: [\"mapDirectionsRenderer\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapDirectionsRenderer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-directions-renderer',\n                    exportAs: 'mapDirectionsRenderer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { directions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], directionsChanged: [{\n                type: Output\n            }], directionsRendererInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n    /** URL of the image that will be shown in the overlay. */\n    set url(url) {\n        this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n    get bounds() {\n        return this._bounds.value;\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    /** Opacity of the overlay. */\n    set opacity(opacity) {\n        this._opacity.next(opacity);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._opacity = new BehaviorSubject(1);\n        this._url = new BehaviorSubject('');\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /** Whether the overlay is clickable */\n        this.clickable = false;\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /** Event emitted when the ground overlay is initialized. */\n        this.groundOverlayInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            // The ground overlay setup is slightly different from the other Google Maps objects in that\n            // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n            // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n            this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n                if (this.groundOverlay) {\n                    this.groundOverlay.setMap(null);\n                    this.groundOverlay = undefined;\n                }\n                if (!bounds) {\n                    return;\n                }\n                if (google.maps.GroundOverlay && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.GroundOverlay, bounds);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                            this._initialize(map, lib.GroundOverlay, bounds);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, overlayConstructor, bounds) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new overlayConstructor(this._url.getValue(), bounds, {\n                clickable: this.clickable,\n                opacity: this._opacity.value,\n            });\n            this._assertInitialized();\n            this.groundOverlay.setMap(map);\n            this._eventManager.setTarget(this.groundOverlay);\n            this.groundOverlayInitialized.emit(this.groundOverlay);\n            // We only need to set up the watchers once.\n            if (!this._hasWatchers) {\n                this._hasWatchers = true;\n                this._watchForOpacityChanges();\n                this._watchForUrlChanges();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.groundOverlay?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.groundOverlay.getUrl();\n    }\n    _watchForOpacityChanges() {\n        this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n            if (opacity != null) {\n                this.groundOverlay?.setOpacity(opacity);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            const overlay = this.groundOverlay;\n            if (overlay) {\n                overlay.set('url', url);\n                // Google Maps only redraws the overlay if we re-set the map.\n                overlay.setMap(null);\n                overlay.setMap(this._map.googleMap);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.groundOverlay) {\n                throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                    'Please wait for the GroundOverlay to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapGroundOverlay, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapGroundOverlay, isStandalone: true, selector: \"map-ground-overlay\", inputs: { url: \"url\", bounds: \"bounds\", clickable: \"clickable\", opacity: \"opacity\" }, outputs: { mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", groundOverlayInitialized: \"groundOverlayInitialized\" }, exportAs: [\"mapGroundOverlay\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapGroundOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { url: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], groundOverlayInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set position(position) {\n        this._position.next(position);\n    }\n    constructor(_googleMap, _elementRef, _ngZone) {\n        this._googleMap = _googleMap;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._position = new BehaviorSubject(undefined);\n        this._destroy = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n         */\n        this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.content_changed\n         */\n        this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n         */\n        this.domready = this._eventManager.getLazyEmitter('domready');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        /** Event emitted when the info window is initialized. */\n        this.infoWindowInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.InfoWindow) {\n                    this._initialize(google.maps.InfoWindow, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        google.maps.importLibrary('maps').then(lib => {\n                            this._initialize(lib.InfoWindow, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(infoWindowConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.infoWindow = new infoWindowConstructor(options);\n            this._eventManager.setTarget(this.infoWindow);\n            this.infoWindowInitialized.emit(this.infoWindow);\n            this._watchForOptionsChanges();\n            this._watchForPositionChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        // If no info window has been created on the server, we do not try closing it.\n        // On the server, an info window cannot be created and this would cause errors.\n        if (this.infoWindow) {\n            this.close();\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close() {\n        this._assertInitialized();\n        this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent() {\n        this._assertInitialized();\n        return this.infoWindow.getContent() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.infoWindow.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided AdvancedMarkerElement.\n     * @deprecated Use the `open` method instead.\n     * @breaking-change 20.0.0\n     */\n    openAdvancedMarkerElement(advancedMarkerElement, content) {\n        this.open({\n            getAnchor: () => advancedMarkerElement,\n        }, undefined, content);\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor, shouldFocus, content) {\n        this._assertInitialized();\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && anchor && !anchor.getAnchor) {\n            throw new Error('Specified anchor does not implement the `getAnchor` method. ' +\n                'It cannot be used to open an info window.');\n        }\n        const anchorObject = anchor ? anchor.getAnchor() : undefined;\n        // Prevent the info window from initializing when trying to reopen on the same anchor.\n        // Note that when the window is opened for the first time, the anchor will always be\n        // undefined. If that's the case, we have to allow it to open in order to handle the\n        // case where the window doesn't have an anchor, but is placed at a particular position.\n        if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n            this._elementRef.nativeElement.style.display = '';\n            if (content) {\n                this.infoWindow.setContent(content);\n            }\n            this.infoWindow.open({\n                map: this._googleMap.googleMap,\n                anchor: anchorObject,\n                shouldFocus,\n            });\n        }\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n            const combinedOptions = {\n                ...options,\n                position: position || options.position,\n                content: this._elementRef.nativeElement,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n            this._assertInitialized();\n            this.infoWindow.setOptions(options);\n        });\n    }\n    _watchForPositionChanges() {\n        this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n            if (position) {\n                this._assertInitialized();\n                this.infoWindow.setPosition(position);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.infoWindow) {\n                throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                    'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                    'it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapInfoWindow, deps: [{ token: GoogleMap }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapInfoWindow, isStandalone: true, selector: \"map-info-window\", inputs: { options: \"options\", position: \"position\" }, outputs: { closeclick: \"closeclick\", contentChanged: \"contentChanged\", domready: \"domready\", positionChanged: \"positionChanged\", zindexChanged: \"zindexChanged\", infoWindowInitialized: \"infoWindowInitialized\" }, host: { styleAttribute: \"display: none\" }, exportAs: [\"mapInfoWindow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapInfoWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    standalone: true,\n                    host: { 'style': 'display: none' },\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], closeclick: [{\n                type: Output\n            }], contentChanged: [{\n                type: Output\n            }], domready: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }], infoWindowInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set url(url) {\n        this._url.next(url);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._url = new BehaviorSubject('');\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n         */\n        this.kmlClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml\n         * #KmlLayer.defaultviewport_changed\n         */\n        this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n         */\n        this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n        /** Event emitted when the KML layer is initialized. */\n        this.kmlLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.KmlLayer && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.KmlLayer, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                            this._initialize(map, lib.KmlLayer, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, layerConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.kmlLayer = new layerConstructor(options);\n            this._assertInitialized();\n            this.kmlLayer.setMap(map);\n            this._eventManager.setTarget(this.kmlLayer);\n            this.kmlLayerInitialized.emit(this.kmlLayer);\n            this._watchForOptionsChanges();\n            this._watchForUrlChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.kmlLayer?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n    getDefaultViewport() {\n        this._assertInitialized();\n        return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n    getMetadata() {\n        this._assertInitialized();\n        return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n    getStatus() {\n        this._assertInitialized();\n        return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.kmlLayer.getZIndex();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n            const combinedOptions = {\n                ...options,\n                url: url || options.url,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            if (this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setOptions(options);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            if (url && this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setUrl(url);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.kmlLayer) {\n                throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                    'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapKmlLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapKmlLayer, isStandalone: true, selector: \"map-kml-layer\", inputs: { options: \"options\", url: \"url\" }, outputs: { kmlClick: \"kmlClick\", defaultviewportChanged: \"defaultviewportChanged\", statusChanged: \"statusChanged\", kmlLayerInitialized: \"kmlLayerInitialized\" }, exportAs: [\"mapKmlLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapKmlLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], kmlClick: [{\n                type: Output\n            }], defaultviewportChanged: [{\n                type: Output\n            }], statusChanged: [{\n                type: Output\n            }], kmlLayerInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS$1 = {\n    position: { lat: 37.421995, lng: -122.084092 },\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title) {\n        this._title = title;\n    }\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position) {\n        this._position = position;\n    }\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label) {\n        this._label = label;\n    }\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable) {\n        this._clickable = clickable;\n    }\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon) {\n        this._icon = icon;\n    }\n    /**\n     * Whether the marker is visible.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n     */\n    set visible(value) {\n        this._visible = value;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n         */\n        this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n         */\n        this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n         */\n        this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n         */\n        this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n         */\n        this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n         */\n        this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n         */\n        this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n         */\n        this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n         */\n        this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n         */\n        this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n         */\n        this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        /** Event emitted when the marker is initialized. */\n        this.markerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this._googleMap._isBrowser) {\n            return;\n        }\n        if (google.maps.Marker && this._googleMap.googleMap) {\n            this._initialize(this._googleMap.googleMap, google.maps.Marker);\n        }\n        else {\n            this._ngZone.runOutsideAngular(() => {\n                Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('marker')]).then(([map, lib]) => {\n                    this._initialize(map, lib.Marker);\n                });\n            });\n        }\n    }\n    _initialize(map, markerConstructor) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.marker = new markerConstructor(this._combineOptions());\n            this._assertInitialized();\n            this.marker.setMap(map);\n            this._eventManager.setTarget(this.marker);\n            this.markerInitialized.next(this.marker);\n        });\n    }\n    ngOnChanges(changes) {\n        const { marker, _title, _position, _label, _clickable, _icon, _visible } = this;\n        if (marker) {\n            if (changes['options']) {\n                marker.setOptions(this._combineOptions());\n            }\n            if (changes['title'] && _title !== undefined) {\n                marker.setTitle(_title);\n            }\n            if (changes['position'] && _position) {\n                marker.setPosition(_position);\n            }\n            if (changes['label'] && _label !== undefined) {\n                marker.setLabel(_label);\n            }\n            if (changes['clickable'] && _clickable !== undefined) {\n                marker.setClickable(_clickable);\n            }\n            if (changes['icon'] && _icon) {\n                marker.setIcon(_icon);\n            }\n            if (changes['visible'] && _visible !== undefined) {\n                marker.setVisible(_visible);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.markerInitialized.complete();\n        this._eventManager.destroy();\n        this.marker?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation() {\n        this._assertInitialized();\n        return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable() {\n        this._assertInitialized();\n        return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor() {\n        this._assertInitialized();\n        return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon() {\n        this._assertInitialized();\n        return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel() {\n        this._assertInitialized();\n        return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape() {\n        this._assertInitialized();\n        return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle() {\n        this._assertInitialized();\n        return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor() {\n        this._assertInitialized();\n        return this.marker;\n    }\n    /** Returns a promise that resolves when the marker has been initialized. */\n    _resolveMarker() {\n        return this.marker\n            ? Promise.resolve(this.marker)\n            : this.markerInitialized.pipe(take(1)).toPromise();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || DEFAULT_MARKER_OPTIONS$1;\n        return {\n            ...options,\n            title: this._title || options.title,\n            position: this._position || options.position,\n            label: this._label || options.label,\n            clickable: this._clickable ?? options.clickable,\n            map: this._googleMap.googleMap,\n            icon: this._icon || options.icon,\n            visible: this._visible ?? options.visible,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.marker) {\n                throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                    'initialized. Please wait for the Marker to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapMarker, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapMarker, isStandalone: true, selector: \"map-marker\", inputs: { title: \"title\", position: \"position\", label: \"label\", clickable: \"clickable\", options: \"options\", icon: \"icon\", visible: \"visible\" }, outputs: { animationChanged: \"animationChanged\", mapClick: \"mapClick\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", draggableChanged: \"draggableChanged\", mapDragstart: \"mapDragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mapMousedown: \"mapMousedown\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", mapMouseup: \"mapMouseup\", positionChanged: \"positionChanged\", mapRightclick: \"mapRightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\", markerInitialized: \"markerInitialized\" }, exportAs: [\"mapMarker\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapMarker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { title: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], animationChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], clickableChanged: [{\n                type: Output\n            }], cursorChanged: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], draggableChanged: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], flatChanged: [{\n                type: Output\n            }], iconChanged: [{\n                type: Output\n            }], mapMousedown: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], mapMouseup: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], shapeChanged: [{\n                type: Output\n            }], titleChanged: [{\n                type: Output\n            }], visibleChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }], markerInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n    set averageCenter(averageCenter) {\n        this._averageCenter = averageCenter;\n    }\n    set batchSizeIE(batchSizeIE) {\n        this._batchSizeIE = batchSizeIE;\n    }\n    set calculator(calculator) {\n        this._calculator = calculator;\n    }\n    set clusterClass(clusterClass) {\n        this._clusterClass = clusterClass;\n    }\n    set enableRetinaIcons(enableRetinaIcons) {\n        this._enableRetinaIcons = enableRetinaIcons;\n    }\n    set gridSize(gridSize) {\n        this._gridSize = gridSize;\n    }\n    set ignoreHidden(ignoreHidden) {\n        this._ignoreHidden = ignoreHidden;\n    }\n    set imageExtension(imageExtension) {\n        this._imageExtension = imageExtension;\n    }\n    set imagePath(imagePath) {\n        this._imagePath = imagePath;\n    }\n    set imageSizes(imageSizes) {\n        this._imageSizes = imageSizes;\n    }\n    set maxZoom(maxZoom) {\n        this._maxZoom = maxZoom;\n    }\n    set minimumClusterSize(minimumClusterSize) {\n        this._minimumClusterSize = minimumClusterSize;\n    }\n    set styles(styles) {\n        this._styles = styles;\n    }\n    set title(title) {\n        this._title = title;\n    }\n    set zIndex(zIndex) {\n        this._zIndex = zIndex;\n    }\n    set zoomOnClick(zoomOnClick) {\n        this._zoomOnClick = zoomOnClick;\n    }\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._currentMarkers = new Set();\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._destroy = new Subject();\n        this.ariaLabelFn = () => '';\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/\n         * _google_markerclustererplus.html#clusteringbegin\n         */\n        this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n         */\n        this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n        /** Emits when a cluster has been clicked. */\n        this.clusterClick = this._eventManager.getLazyEmitter('click');\n        /** Event emitted when the clusterer is initialized. */\n        this.markerClustererInitialized = new EventEmitter();\n        this._canInitialize = _googleMap._isBrowser;\n    }\n    ngOnInit() {\n        if (this._canInitialize) {\n            this._ngZone.runOutsideAngular(() => {\n                this._googleMap._resolveMap().then(map => {\n                    if (typeof MarkerClusterer !== 'function' &&\n                        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' +\n                            'Please install the MarkerClustererPlus library: ' +\n                            'https://github.com/googlemaps/js-markerclustererplus');\n                    }\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    this.markerClusterer = this._ngZone.runOutsideAngular(() => {\n                        return new MarkerClusterer(map, [], this._combineOptions());\n                    });\n                    this._assertInitialized();\n                    this._eventManager.setTarget(this.markerClusterer);\n                    this.markerClustererInitialized.emit(this.markerClusterer);\n                });\n            });\n        }\n    }\n    ngAfterContentInit() {\n        if (this._canInitialize) {\n            if (this.markerClusterer) {\n                this._watchForMarkerChanges();\n            }\n            else {\n                this.markerClustererInitialized\n                    .pipe(take(1), takeUntil(this._destroy))\n                    .subscribe(() => this._watchForMarkerChanges());\n            }\n        }\n    }\n    ngOnChanges(changes) {\n        const { markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles, _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath, _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick, } = this;\n        if (clusterer) {\n            if (changes['options']) {\n                clusterer.setOptions(this._combineOptions());\n            }\n            if (changes['ariaLabelFn']) {\n                clusterer.ariaLabelFn = ariaLabelFn;\n            }\n            if (changes['averageCenter'] && _averageCenter !== undefined) {\n                clusterer.setAverageCenter(_averageCenter);\n            }\n            if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n                clusterer.setBatchSizeIE(_batchSizeIE);\n            }\n            if (changes['calculator'] && !!_calculator) {\n                clusterer.setCalculator(_calculator);\n            }\n            if (changes['clusterClass'] && _clusterClass !== undefined) {\n                clusterer.setClusterClass(_clusterClass);\n            }\n            if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n                clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n            }\n            if (changes['gridSize'] && _gridSize !== undefined) {\n                clusterer.setGridSize(_gridSize);\n            }\n            if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n                clusterer.setIgnoreHidden(_ignoreHidden);\n            }\n            if (changes['imageExtension'] && _imageExtension !== undefined) {\n                clusterer.setImageExtension(_imageExtension);\n            }\n            if (changes['imagePath'] && _imagePath !== undefined) {\n                clusterer.setImagePath(_imagePath);\n            }\n            if (changes['imageSizes'] && _imageSizes) {\n                clusterer.setImageSizes(_imageSizes);\n            }\n            if (changes['maxZoom'] && _maxZoom !== undefined) {\n                clusterer.setMaxZoom(_maxZoom);\n            }\n            if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n                clusterer.setMinimumClusterSize(_minimumClusterSize);\n            }\n            if (changes['styles'] && _styles) {\n                clusterer.setStyles(_styles);\n            }\n            if (changes['title'] && _title !== undefined) {\n                clusterer.setTitle(_title);\n            }\n            if (changes['zIndex'] && _zIndex !== undefined) {\n                clusterer.setZIndex(_zIndex);\n            }\n            if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n                clusterer.setZoomOnClick(_zoomOnClick);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this._eventManager.destroy();\n        this.markerClusterer?.setMap(null);\n    }\n    fitMapToMarkers(padding) {\n        this._assertInitialized();\n        this.markerClusterer.fitMapToMarkers(padding);\n    }\n    getAverageCenter() {\n        this._assertInitialized();\n        return this.markerClusterer.getAverageCenter();\n    }\n    getBatchSizeIE() {\n        this._assertInitialized();\n        return this.markerClusterer.getBatchSizeIE();\n    }\n    getCalculator() {\n        this._assertInitialized();\n        return this.markerClusterer.getCalculator();\n    }\n    getClusterClass() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusterClass();\n    }\n    getClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusters();\n    }\n    getEnableRetinaIcons() {\n        this._assertInitialized();\n        return this.markerClusterer.getEnableRetinaIcons();\n    }\n    getGridSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getGridSize();\n    }\n    getIgnoreHidden() {\n        this._assertInitialized();\n        return this.markerClusterer.getIgnoreHidden();\n    }\n    getImageExtension() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageExtension();\n    }\n    getImagePath() {\n        this._assertInitialized();\n        return this.markerClusterer.getImagePath();\n    }\n    getImageSizes() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageSizes();\n    }\n    getMaxZoom() {\n        this._assertInitialized();\n        return this.markerClusterer.getMaxZoom();\n    }\n    getMinimumClusterSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getMinimumClusterSize();\n    }\n    getStyles() {\n        this._assertInitialized();\n        return this.markerClusterer.getStyles();\n    }\n    getTitle() {\n        this._assertInitialized();\n        return this.markerClusterer.getTitle();\n    }\n    getTotalClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalClusters();\n    }\n    getTotalMarkers() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalMarkers();\n    }\n    getZIndex() {\n        this._assertInitialized();\n        return this.markerClusterer.getZIndex();\n    }\n    getZoomOnClick() {\n        this._assertInitialized();\n        return this.markerClusterer.getZoomOnClick();\n    }\n    _combineOptions() {\n        const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n        return {\n            ...options,\n            ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n            averageCenter: this._averageCenter ?? options.averageCenter,\n            batchSize: this.batchSize ?? options.batchSize,\n            batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n            calculator: this._calculator ?? options.calculator,\n            clusterClass: this._clusterClass ?? options.clusterClass,\n            enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n            gridSize: this._gridSize ?? options.gridSize,\n            ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n            imageExtension: this._imageExtension ?? options.imageExtension,\n            imagePath: this._imagePath ?? options.imagePath,\n            imageSizes: this._imageSizes ?? options.imageSizes,\n            maxZoom: this._maxZoom ?? options.maxZoom,\n            minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n            styles: this._styles ?? options.styles,\n            title: this._title ?? options.title,\n            zIndex: this._zIndex ?? options.zIndex,\n            zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n        };\n    }\n    _watchForMarkerChanges() {\n        this._assertInitialized();\n        this._ngZone.runOutsideAngular(() => {\n            this._getInternalMarkers(this._markers).then(markers => {\n                const initialMarkers = [];\n                for (const marker of markers) {\n                    this._currentMarkers.add(marker);\n                    initialMarkers.push(marker);\n                }\n                this.markerClusterer.addMarkers(initialMarkers);\n            });\n        });\n        this._markers.changes\n            .pipe(takeUntil(this._destroy))\n            .subscribe((markerComponents) => {\n            this._assertInitialized();\n            this._ngZone.runOutsideAngular(() => {\n                this._getInternalMarkers(markerComponents).then(markers => {\n                    const newMarkers = new Set(markers);\n                    const markersToAdd = [];\n                    const markersToRemove = [];\n                    for (const marker of Array.from(newMarkers)) {\n                        if (!this._currentMarkers.has(marker)) {\n                            this._currentMarkers.add(marker);\n                            markersToAdd.push(marker);\n                        }\n                    }\n                    for (const marker of Array.from(this._currentMarkers)) {\n                        if (!newMarkers.has(marker)) {\n                            markersToRemove.push(marker);\n                        }\n                    }\n                    this.markerClusterer.addMarkers(markersToAdd, true);\n                    this.markerClusterer.removeMarkers(markersToRemove, true);\n                    this.markerClusterer.repaint();\n                    for (const marker of markersToRemove) {\n                        this._currentMarkers.delete(marker);\n                    }\n                });\n            });\n        });\n    }\n    _getInternalMarkers(markers) {\n        return Promise.all(markers.map(markerComponent => markerComponent._resolveMarker()));\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.markerClusterer) {\n                throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' +\n                    'Please wait for the MarkerClusterer to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapMarkerClusterer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapMarkerClusterer, isStandalone: true, selector: \"map-marker-clusterer\", inputs: { ariaLabelFn: \"ariaLabelFn\", averageCenter: \"averageCenter\", batchSize: \"batchSize\", batchSizeIE: \"batchSizeIE\", calculator: \"calculator\", clusterClass: \"clusterClass\", enableRetinaIcons: \"enableRetinaIcons\", gridSize: \"gridSize\", ignoreHidden: \"ignoreHidden\", imageExtension: \"imageExtension\", imagePath: \"imagePath\", imageSizes: \"imageSizes\", maxZoom: \"maxZoom\", minimumClusterSize: \"minimumClusterSize\", styles: \"styles\", title: \"title\", zIndex: \"zIndex\", zoomOnClick: \"zoomOnClick\", options: \"options\" }, outputs: { clusteringbegin: \"clusteringbegin\", clusteringend: \"clusteringend\", clusterClick: \"clusterClick\", markerClustererInitialized: \"markerClustererInitialized\" }, queries: [{ propertyName: \"_markers\", predicate: MapMarker, descendants: true }], exportAs: [\"mapMarkerClusterer\"], usesOnChanges: true, ngImport: i0, template: '<ng-content />', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapMarkerClusterer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'map-marker-clusterer',\n                    exportAs: 'mapMarkerClusterer',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    standalone: true,\n                    template: '<ng-content />',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { ariaLabelFn: [{\n                type: Input\n            }], averageCenter: [{\n                type: Input\n            }], batchSize: [{\n                type: Input\n            }], batchSizeIE: [{\n                type: Input\n            }], calculator: [{\n                type: Input\n            }], clusterClass: [{\n                type: Input\n            }], enableRetinaIcons: [{\n                type: Input\n            }], gridSize: [{\n                type: Input\n            }], ignoreHidden: [{\n                type: Input\n            }], imageExtension: [{\n                type: Input\n            }], imagePath: [{\n                type: Input\n            }], imageSizes: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], minimumClusterSize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], zoomOnClick: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], clusteringbegin: [{\n                type: Output\n            }], clusteringend: [{\n                type: Output\n            }], clusterClick: [{\n                type: Output\n            }], _markers: [{\n                type: ContentChildren,\n                args: [MapMarker, { descendants: true }]\n            }], markerClustererInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set paths(paths) {\n        this._paths.next(paths);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._paths = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n         */\n        this.polygonClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n         */\n        this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n         */\n        this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n         */\n        this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n         */\n        this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n         */\n        this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n         */\n        this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n         */\n        this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n         */\n        this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n         */\n        this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n         */\n        this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the polygon is initialized. */\n        this.polygonInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.Polygon && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.Polygon, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                            this._initialize(map, lib.Polygon, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, polygonConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.polygon = new polygonConstructor(options);\n            this._assertInitialized();\n            this.polygon.setMap(map);\n            this._eventManager.setTarget(this.polygon);\n            this.polygonInitialized.emit(this.polygon);\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.polygon?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n    getPaths() {\n        this._assertInitialized();\n        return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polygon.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n            const combinedOptions = {\n                ...options,\n                paths: paths || options.paths,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polygon.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n            if (paths) {\n                this._assertInitialized();\n                this.polygon.setPaths(paths);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.polygon) {\n                throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                    'initialized. Please wait for the Polygon to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapPolygon, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapPolygon, isStandalone: true, selector: \"map-polygon\", inputs: { options: \"options\", paths: \"paths\" }, outputs: { polygonClick: \"polygonClick\", polygonDblclick: \"polygonDblclick\", polygonDrag: \"polygonDrag\", polygonDragend: \"polygonDragend\", polygonDragstart: \"polygonDragstart\", polygonMousedown: \"polygonMousedown\", polygonMousemove: \"polygonMousemove\", polygonMouseout: \"polygonMouseout\", polygonMouseover: \"polygonMouseover\", polygonMouseup: \"polygonMouseup\", polygonRightclick: \"polygonRightclick\", polygonInitialized: \"polygonInitialized\" }, exportAs: [\"mapPolygon\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapPolygon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], paths: [{\n                type: Input\n            }], polygonClick: [{\n                type: Output\n            }], polygonDblclick: [{\n                type: Output\n            }], polygonDrag: [{\n                type: Output\n            }], polygonDragend: [{\n                type: Output\n            }], polygonDragstart: [{\n                type: Output\n            }], polygonMousedown: [{\n                type: Output\n            }], polygonMousemove: [{\n                type: Output\n            }], polygonMouseout: [{\n                type: Output\n            }], polygonMouseover: [{\n                type: Output\n            }], polygonMouseup: [{\n                type: Output\n            }], polygonRightclick: [{\n                type: Output\n            }], polygonInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set path(path) {\n        this._path.next(path);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._path = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n         */\n        this.polylineClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n         */\n        this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n         */\n        this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n         */\n        this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n         */\n        this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n         */\n        this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n         */\n        this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n         */\n        this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n         */\n        this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n         */\n        this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n         */\n        this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the polyline is initialized. */\n        this.polylineInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.Polyline && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.Polyline, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                            this._initialize(map, lib.Polyline, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, polylineConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.polyline = new polylineConstructor(options);\n            this._assertInitialized();\n            this.polyline.setMap(map);\n            this._eventManager.setTarget(this.polyline);\n            this.polylineInitialized.emit(this.polyline);\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.polyline?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polyline.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n            const combinedOptions = {\n                ...options,\n                path: path || options.path,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polyline.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n            if (path) {\n                this._assertInitialized();\n                this.polyline.setPath(path);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.polyline) {\n                throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                    'initialized. Please wait for the Polyline to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapPolyline, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapPolyline, isStandalone: true, selector: \"map-polyline\", inputs: { options: \"options\", path: \"path\" }, outputs: { polylineClick: \"polylineClick\", polylineDblclick: \"polylineDblclick\", polylineDrag: \"polylineDrag\", polylineDragend: \"polylineDragend\", polylineDragstart: \"polylineDragstart\", polylineMousedown: \"polylineMousedown\", polylineMousemove: \"polylineMousemove\", polylineMouseout: \"polylineMouseout\", polylineMouseover: \"polylineMouseover\", polylineMouseup: \"polylineMouseup\", polylineRightclick: \"polylineRightclick\", polylineInitialized: \"polylineInitialized\" }, exportAs: [\"mapPolyline\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapPolyline, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], polylineClick: [{\n                type: Output\n            }], polylineDblclick: [{\n                type: Output\n            }], polylineDrag: [{\n                type: Output\n            }], polylineDragend: [{\n                type: Output\n            }], polylineDragstart: [{\n                type: Output\n            }], polylineMousedown: [{\n                type: Output\n            }], polylineMousemove: [{\n                type: Output\n            }], polylineMouseout: [{\n                type: Output\n            }], polylineMouseover: [{\n                type: Output\n            }], polylineMouseup: [{\n                type: Output\n            }], polylineRightclick: [{\n                type: Output\n            }], polylineInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n         */ this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n         */\n        this.rectangleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n         */\n        this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n         */\n        this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n         */\n        this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n         */\n        this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n         */\n        this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n         */\n        this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n         */\n        this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n         */\n        this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n         */\n        this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n         */\n        this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the rectangle is initialized. */\n        this.rectangleInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.Rectangle && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.Rectangle, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                            this._initialize(map, lib.Rectangle, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, rectangleConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.rectangle = new rectangleConstructor(options);\n            this._assertInitialized();\n            this.rectangle.setMap(map);\n            this._eventManager.setTarget(this.rectangle);\n            this.rectangleInitialized.emit(this.rectangle);\n            this._watchForOptionsChanges();\n            this._watchForBoundsChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.rectangle?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.rectangle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n            const combinedOptions = {\n                ...options,\n                bounds: bounds || options.bounds,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.rectangle.setOptions(options);\n        });\n    }\n    _watchForBoundsChanges() {\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n            if (bounds) {\n                this._assertInitialized();\n                this.rectangle.setBounds(bounds);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.rectangle) {\n                throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                    'Please wait for the Rectangle to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapRectangle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapRectangle, isStandalone: true, selector: \"map-rectangle\", inputs: { options: \"options\", bounds: \"bounds\" }, outputs: { boundsChanged: \"boundsChanged\", rectangleClick: \"rectangleClick\", rectangleDblclick: \"rectangleDblclick\", rectangleDrag: \"rectangleDrag\", rectangleDragend: \"rectangleDragend\", rectangleDragstart: \"rectangleDragstart\", rectangleMousedown: \"rectangleMousedown\", rectangleMousemove: \"rectangleMousemove\", rectangleMouseout: \"rectangleMouseout\", rectangleMouseover: \"rectangleMouseover\", rectangleMouseup: \"rectangleMouseup\", rectangleRightclick: \"rectangleRightclick\", rectangleInitialized: \"rectangleInitialized\" }, exportAs: [\"mapRectangle\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapRectangle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], boundsChanged: [{\n                type: Output\n            }], rectangleClick: [{\n                type: Output\n            }], rectangleDblclick: [{\n                type: Output\n            }], rectangleDrag: [{\n                type: Output\n            }], rectangleDragend: [{\n                type: Output\n            }], rectangleDragstart: [{\n                type: Output\n            }], rectangleMousedown: [{\n                type: Output\n            }], rectangleMousemove: [{\n                type: Output\n            }], rectangleMouseout: [{\n                type: Output\n            }], rectangleMouseover: [{\n                type: Output\n            }], rectangleMouseup: [{\n                type: Output\n            }], rectangleRightclick: [{\n                type: Output\n            }], rectangleInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n    /**\n     * Whether the traffic layer refreshes with updated information automatically.\n     */\n    set autoRefresh(autoRefresh) {\n        this._autoRefresh.next(autoRefresh);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._autoRefresh = new BehaviorSubject(true);\n        this._destroyed = new Subject();\n        /** Event emitted when the traffic layer is initialized. */\n        this.trafficLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.TrafficLayer && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.TrafficLayer, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                            this._initialize(map, lib.TrafficLayer, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, layerConstructor, options) {\n        this._ngZone.runOutsideAngular(() => {\n            this.trafficLayer = new layerConstructor(options);\n            this._assertInitialized();\n            this.trafficLayer.setMap(map);\n            this.trafficLayerInitialized.emit(this.trafficLayer);\n            this._watchForAutoRefreshChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.trafficLayer?.setMap(null);\n    }\n    _combineOptions() {\n        return this._autoRefresh.pipe(map(autoRefresh => {\n            const combinedOptions = { autoRefresh };\n            return combinedOptions;\n        }));\n    }\n    _watchForAutoRefreshChanges() {\n        this._combineOptions()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(options => {\n            this._assertInitialized();\n            this.trafficLayer.setOptions(options);\n        });\n    }\n    _assertInitialized() {\n        if (!this.trafficLayer) {\n            throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                'Please wait for the Traffic Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapTrafficLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapTrafficLayer, isStandalone: true, selector: \"map-traffic-layer\", inputs: { autoRefresh: \"autoRefresh\" }, outputs: { trafficLayerInitialized: \"trafficLayerInitialized\" }, exportAs: [\"mapTrafficLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapTrafficLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { autoRefresh: [{\n                type: Input\n            }], trafficLayerInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer {\n    constructor() {\n        this._map = inject(GoogleMap);\n        this._zone = inject(NgZone);\n        /** Event emitted when the transit layer is initialized. */\n        this.transitLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            if (google.maps.TransitLayer && this._map.googleMap) {\n                this._initialize(this._map.googleMap, google.maps.TransitLayer);\n            }\n            else {\n                this._zone.runOutsideAngular(() => {\n                    Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                        this._initialize(map, lib.TransitLayer);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, layerConstructor) {\n        this._zone.runOutsideAngular(() => {\n            this.transitLayer = new layerConstructor();\n            this.transitLayerInitialized.emit(this.transitLayer);\n            this._assertLayerInitialized();\n            this.transitLayer.setMap(map);\n        });\n    }\n    ngOnDestroy() {\n        this.transitLayer?.setMap(null);\n    }\n    _assertLayerInitialized() {\n        if (!this.transitLayer) {\n            throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapTransitLayer, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapTransitLayer, isStandalone: true, selector: \"map-transit-layer\", outputs: { transitLayerInitialized: \"transitLayerInitialized\" }, exportAs: [\"mapTransitLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapTransitLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                    standalone: true,\n                }]\n        }], propDecorators: { transitLayerInitialized: [{\n                type: Output\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n    /**\n     * Data shown on the heatmap.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    set data(data) {\n        this._data = data;\n    }\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        /** Event emitted when the heatmap is initialized. */\n        this.heatmapInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            if (!window.google?.maps?.visualization &&\n                !window.google?.maps.importLibrary &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n                    'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n                    'https://developers.google.com/maps/documentation/javascript/visualization');\n            }\n            if (google.maps.visualization?.HeatmapLayer && this._googleMap.googleMap) {\n                this._initialize(this._googleMap.googleMap, google.maps.visualization.HeatmapLayer);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    Promise.all([\n                        this._googleMap._resolveMap(),\n                        google.maps.importLibrary('visualization'),\n                    ]).then(([map, lib]) => {\n                        this._initialize(map, lib.HeatmapLayer);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, heatmapConstructor) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.heatmap = new heatmapConstructor(this._combineOptions());\n            this._assertInitialized();\n            this.heatmap.setMap(map);\n            this.heatmapInitialized.emit(this.heatmap);\n        });\n    }\n    ngOnChanges(changes) {\n        const { _data, heatmap } = this;\n        if (heatmap) {\n            if (changes['options']) {\n                heatmap.setOptions(this._combineOptions());\n            }\n            if (changes['data'] && _data !== undefined) {\n                heatmap.setData(this._normalizeData(_data));\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.heatmap?.setMap(null);\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n    getData() {\n        this._assertInitialized();\n        return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            data: this._normalizeData(this._data || options.data || []),\n            map: this._googleMap.googleMap,\n        };\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n    _normalizeData(data) {\n        const result = [];\n        data.forEach(item => {\n            result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n        });\n        return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.heatmap) {\n                throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' +\n                    'initialized. Please wait for the heatmap to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapHeatmapLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapHeatmapLayer, isStandalone: true, selector: \"map-heatmap-layer\", inputs: { data: \"data\", options: \"options\" }, outputs: { heatmapInitialized: \"heatmapInitialized\" }, exportAs: [\"mapHeatmapLayer\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapHeatmapLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-heatmap-layer',\n                    exportAs: 'mapHeatmapLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { data: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], heatmapInitialized: [{\n                type: Output\n            }] } });\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n    return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n    position: { lat: 37.221995, lng: -122.184092 },\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapAdvancedMarker {\n    /**\n     * Rollover text. If provided, an accessibility text (e.g. for use with screen readers) will be added to the AdvancedMarkerElement with the provided value.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.title\n     */\n    set title(title) {\n        this._title = title;\n    }\n    /**\n     * Sets the AdvancedMarkerElement's position. An AdvancedMarkerElement may be constructed without a position, but will not be displayed until its position is provided - for example, by a user's actions or choices. An AdvancedMarkerElement's position can be provided by setting AdvancedMarkerElement.position if not provided at the construction.\n     * Note: AdvancedMarkerElement with altitude is only supported on vector maps.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.position\n     */\n    set position(position) {\n        this._position = position;\n    }\n    /**\n     * The DOM Element backing the visual of an AdvancedMarkerElement.\n     * Note: AdvancedMarkerElement does not clone the passed-in DOM element. Once the DOM element is passed to an AdvancedMarkerElement, passing the same DOM element to another AdvancedMarkerElement will move the DOM element and cause the previous AdvancedMarkerElement to look empty.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.content\n     */\n    set content(content) {\n        this._content = content;\n    }\n    /**\n     * If true, the AdvancedMarkerElement can be dragged.\n     * Note: AdvancedMarkerElement with altitude is not draggable.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.gmpDraggable\n     */\n    set gmpDraggable(draggable) {\n        this._draggable = draggable;\n    }\n    /**\n     * Options for constructing an AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * AdvancedMarkerElements on the map are prioritized by zIndex, with higher values indicating higher display.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.zIndex\n     */\n    set zIndex(zIndex) {\n        this._zIndex = zIndex;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /**\n         * This event is fired when the AdvancedMarkerElement element is clicked.\n         * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * This event is repeatedly fired while the user drags the AdvancedMarkerElement.\n         * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * This event is fired when the user stops dragging the AdvancedMarkerElement.\n         * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * This event is fired when the user starts dragging the AdvancedMarkerElement.\n         * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /** Event emitted when the marker is initialized. */\n        this.markerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this._googleMap._isBrowser) {\n            return;\n        }\n        if (google.maps.marker?.AdvancedMarkerElement && this._googleMap.googleMap) {\n            this._initialize(this._googleMap.googleMap, google.maps.marker.AdvancedMarkerElement);\n        }\n        else {\n            this._ngZone.runOutsideAngular(() => {\n                Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('marker')]).then(([map, lib]) => {\n                    this._initialize(map, lib.AdvancedMarkerElement);\n                });\n            });\n        }\n    }\n    _initialize(map, advancedMarkerConstructor) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.advancedMarker = new advancedMarkerConstructor(this._combineOptions());\n            this._assertInitialized();\n            this.advancedMarker.map = map;\n            this._eventManager.setTarget(this.advancedMarker);\n            this.markerInitialized.next(this.advancedMarker);\n        });\n    }\n    ngOnChanges(changes) {\n        const { advancedMarker, _content, _position, _title, _draggable, _zIndex } = this;\n        if (advancedMarker) {\n            if (changes['title']) {\n                advancedMarker.title = _title;\n            }\n            if (changes['content']) {\n                advancedMarker.content = _content;\n            }\n            if (changes['gmpDraggable']) {\n                advancedMarker.gmpDraggable = _draggable;\n            }\n            if (changes['content']) {\n                advancedMarker.content = _content;\n            }\n            if (changes['position']) {\n                advancedMarker.position = _position;\n            }\n            if (changes['zIndex']) {\n                advancedMarker.zIndex = _zIndex;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.markerInitialized.complete();\n        this._eventManager.destroy();\n        if (this.advancedMarker) {\n            this.advancedMarker.map = null;\n        }\n    }\n    getAnchor() {\n        this._assertInitialized();\n        return this.advancedMarker;\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || DEFAULT_MARKER_OPTIONS;\n        return {\n            ...options,\n            title: this._title || options.title,\n            position: this._position || options.position,\n            content: this._content || options.content,\n            zIndex: this._zIndex ?? options.zIndex,\n            gmpDraggable: this._draggable ?? options.gmpDraggable,\n            map: this._googleMap.googleMap,\n        };\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.advancedMarker) {\n                throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                    'initialized. Please wait for the Marker to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapAdvancedMarker, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: MapAdvancedMarker, isStandalone: true, selector: \"map-advanced-marker\", inputs: { title: \"title\", position: \"position\", content: \"content\", gmpDraggable: \"gmpDraggable\", options: \"options\", zIndex: \"zIndex\" }, outputs: { mapClick: \"mapClick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", markerInitialized: \"markerInitialized\" }, exportAs: [\"mapAdvancedMarker\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapAdvancedMarker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-advanced-marker',\n                    exportAs: 'mapAdvancedMarker',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { title: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], gmpDraggable: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], mapClick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], markerInitialized: [{\n                type: Output\n            }] } });\n\nconst COMPONENTS = [\n    GoogleMap,\n    MapBaseLayer,\n    MapBicyclingLayer,\n    MapCircle,\n    MapDirectionsRenderer,\n    MapGroundOverlay,\n    MapHeatmapLayer,\n    MapInfoWindow,\n    MapKmlLayer,\n    MapMarker,\n    MapAdvancedMarker,\n    MapMarkerClusterer,\n    MapPolygon,\n    MapPolyline,\n    MapRectangle,\n    MapTrafficLayer,\n    MapTransitLayer,\n];\nclass GoogleMapsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: GoogleMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: GoogleMapsModule, imports: [GoogleMap,\n            MapBaseLayer,\n            MapBicyclingLayer,\n            MapCircle,\n            MapDirectionsRenderer,\n            MapGroundOverlay,\n            MapHeatmapLayer,\n            MapInfoWindow,\n            MapKmlLayer,\n            MapMarker,\n            MapAdvancedMarker,\n            MapMarkerClusterer,\n            MapPolygon,\n            MapPolyline,\n            MapRectangle,\n            MapTrafficLayer,\n            MapTransitLayer], exports: [GoogleMap,\n            MapBaseLayer,\n            MapBicyclingLayer,\n            MapCircle,\n            MapDirectionsRenderer,\n            MapGroundOverlay,\n            MapHeatmapLayer,\n            MapInfoWindow,\n            MapKmlLayer,\n            MapMarker,\n            MapAdvancedMarker,\n            MapMarkerClusterer,\n            MapPolygon,\n            MapPolyline,\n            MapRectangle,\n            MapTrafficLayer,\n            MapTransitLayer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: GoogleMapsModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: GoogleMapsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: COMPONENTS,\n                    exports: COMPONENTS,\n                }]\n        }] });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsService.route\n     */\n    route(request) {\n        return new Observable(observer => {\n            this._getService().then(service => {\n                service.route(request, (result, status) => {\n                    this._ngZone.run(() => {\n                        observer.next({ result: result || undefined, status });\n                        observer.complete();\n                    });\n                });\n            });\n        });\n    }\n    _getService() {\n        if (!this._directionsService) {\n            if (google.maps.DirectionsService) {\n                this._directionsService = new google.maps.DirectionsService();\n            }\n            else {\n                return google.maps.importLibrary('routes').then(lib => {\n                    this._directionsService = new lib.DirectionsService();\n                    return this._directionsService;\n                });\n            }\n        }\n        return Promise.resolve(this._directionsService);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapDirectionsService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapDirectionsService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapDirectionsService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }] });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n     */\n    geocode(request) {\n        return new Observable(observer => {\n            this._getGeocoder().then(geocoder => {\n                geocoder.geocode(request, (results, status) => {\n                    this._ngZone.run(() => {\n                        observer.next({ results: results || [], status });\n                        observer.complete();\n                    });\n                });\n            });\n        });\n    }\n    _getGeocoder() {\n        if (!this._geocoder) {\n            if (google.maps.Geocoder) {\n                this._geocoder = new google.maps.Geocoder();\n            }\n            else {\n                return google.maps.importLibrary('geocoding').then(lib => {\n                    this._geocoder = new lib.Geocoder();\n                    return this._geocoder;\n                });\n            }\n        }\n        return Promise.resolve(this._geocoder);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapGeocoder, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapGeocoder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: MapGeocoder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapAdvancedMarker, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}