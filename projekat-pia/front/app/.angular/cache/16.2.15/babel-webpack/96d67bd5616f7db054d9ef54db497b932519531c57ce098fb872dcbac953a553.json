{"ast":null,"code":"import Dekorater from '../models/dekorater';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nexport class DekoraterComponent {\n  constructor(servis, ruter) {\n    this.servis = servis;\n    this.ruter = ruter;\n    this.dekorater = new Dekorater();\n    this.backendUrl = 'http://localhost:4000/';\n    this.dinersRegex = /^(300|301|302|303|36|38)\\d{12}$/;\n    this.masterCardRegex = /^(51|52|53|54|55)\\d{14}$/;\n    this.visaRegex = /^(4539|4556|4916|4532|4929|4485|4716)\\d{12}$/;\n    this.ime = '';\n    this.prezime = '';\n    this.broj = '';\n    this.imejl = '';\n    this.picture = null;\n    this.kartica = 0;\n    this.error = '';\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file && (file.type === 'image/jpeg' || file.type === 'image/png')) {\n      this.picture = file; // Čuva sliku ako je u pravilnom formatu\n    } else {\n      alert(\"Samo JPG/PNG formati su podržani!\");\n    }\n  }\n  promeniSliku() {\n    const formData = new FormData();\n    formData.append('korisnicko_ime', this.dekorater.korisnicko_ime);\n    if (this.picture) formData.append('slika', this.picture);\n    this.servis.promeniSliku2(formData).subscribe(poruka => {\n      if (poruka.msg == 'ok') {\n        this.ngOnInit();\n      } else {\n        alert('Nije uspelo azuziranje slike');\n      }\n    });\n  }\n  promeniIme() {\n    this.servis.promeniIme2(this.dekorater.korisnicko_ime, this.ime).subscribe(poruka => {\n      if (poruka.msg == 'ok') {\n        this.ngOnInit();\n      } else {\n        alert('Azuriranje imena nije uspelo');\n      }\n    });\n  }\n  promeniPrezime() {\n    this.servis.promeniPrezime2(this.dekorater.korisnicko_ime, this.prezime).subscribe(poruka => {\n      if (poruka.msg == 'ok') {\n        this.ngOnInit();\n      } else {\n        alert('Azuriranje prezimena nije uspelo');\n      }\n    });\n  }\n  promeniMejl() {\n    this.servis.promeniMejl2(this.dekorater.korisnicko_ime, this.imejl).subscribe(poruka => {\n      if (poruka.msg == 'ok') {\n        this.ngOnInit();\n      } else {\n        alert('Azuriranje mejla nije uspelo');\n      }\n    });\n  }\n  promeniBroj() {\n    this.servis.promeniBroj2(this.dekorater.korisnicko_ime, this.broj).subscribe(poruka => {\n      if (poruka.msg == 'ok') {\n        this.ngOnInit();\n      } else {\n        alert('Azuriranje broja nije uspelo');\n      }\n    });\n  }\n  ngOnInit() {\n    let naziv = localStorage.getItem('ulogovan');\n    naziv = naziv == null ? '' : naziv;\n    this.servis.getDekorater(naziv).subscribe(korisnik => {\n      this.dekorater = korisnik;\n    });\n  }\n  getUserImageUrl(imagePath) {\n    // Kombinujte osnovni URL sa putanjom iz baze\n    return this.backendUrl + imagePath;\n  }\n  promeniKarticu() {\n    let proveraKartice = this.kartica.toString();\n    if (!this.dinersRegex.test(proveraKartice) && !this.masterCardRegex.test(proveraKartice) && !this.visaRegex.test(proveraKartice)) {\n      this.error = 'Broj kartice nije u odgovarajucem formatu!';\n    }\n    this.servis.promeniKarticu2(this.dekorater.korisnicko_ime, this.kartica).subscribe(poruka => {\n      if (poruka.msg == 'ok') {\n        this.ngOnInit();\n      } else {\n        alert('Azuriranje kartice nije uspelo');\n      }\n    });\n  }\n  static #_ = this.ɵfac = function DekoraterComponent_Factory(t) {\n    return new (t || DekoraterComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DekoraterComponent,\n    selectors: [[\"app-dekorater\"]],\n    decls: 2,\n    vars: 0,\n    template: function DekoraterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"dekorater works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Dekorater","DekoraterComponent","constructor","servis","ruter","dekorater","backendUrl","dinersRegex","masterCardRegex","visaRegex","ime","prezime","broj","imejl","picture","kartica","error","onFileSelected","event","file","target","files","type","alert","promeniSliku","formData","FormData","append","korisnicko_ime","promeniSliku2","subscribe","poruka","msg","ngOnInit","promeniIme","promeniIme2","promeniPrezime","promeniPrezime2","promeniMejl","promeniMejl2","promeniBroj","promeniBroj2","naziv","localStorage","getItem","getDekorater","korisnik","getUserImageUrl","imagePath","promeniKarticu","proveraKartice","toString","test","promeniKarticu2","_","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","template","DekoraterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\projekat-pia\\front\\app\\src\\app\\dekorater\\dekorater.component.ts","D:\\projekat-pia\\front\\app\\src\\app\\dekorater\\dekorater.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\nimport Dekorater from '../models/dekorater';\n\n@Component({\n  selector: 'app-dekorater',\n  templateUrl: './dekorater.component.html',\n  styleUrls: ['./dekorater.component.css']\n})\nexport class DekoraterComponent implements OnInit{\n  constructor(private servis:UserService,private ruter:Router){}\n\n  dekorater:Dekorater=new Dekorater()\n\n  backendUrl: string = 'http://localhost:4000/';\n\n\n  dinersRegex = /^(300|301|302|303|36|38)\\d{12}$/;\n\n  masterCardRegex = /^(51|52|53|54|55)\\d{14}$/;\n\n\n  visaRegex = /^(4539|4556|4916|4532|4929|4485|4716)\\d{12}$/;\n\n  ime:string=''\n  prezime:string=''\n  broj:string=''\n  imejl:string=''\n  picture: File | null = null\n  kartica:number=0;\n\n  error:string=''\n\n  onFileSelected(event: any): void {\n    const file: File = event.target.files[0];\n    if (file && (file.type === 'image/jpeg' || file.type === 'image/png')) {\n      this.picture = file;  // Čuva sliku ako je u pravilnom formatu\n    } else {\n      alert(\"Samo JPG/PNG formati su podržani!\");\n    }\n  }\n\n  promeniSliku(){\n    const formData = new FormData();\n    formData.append('korisnicko_ime',this.dekorater.korisnicko_ime)\n    if(this.picture)\n    formData.append('slika',this.picture)\n    this.servis.promeniSliku2(formData).subscribe(\n      poruka=>{\n        if(poruka.msg=='ok'){this.ngOnInit()}\n        else{\n          alert('Nije uspelo azuziranje slike')\n        }\n      }\n    )\n\n  }\n\n  promeniIme(){\n    this.servis.promeniIme2(this.dekorater.korisnicko_ime,this.ime).subscribe(\n      poruka=>{\n        if(poruka.msg=='ok') {this.ngOnInit()}\n        else{ alert('Azuriranje imena nije uspelo')}\n      }\n    )\n  }\n\n  promeniPrezime(){\n    this.servis.promeniPrezime2(this.dekorater.korisnicko_ime,this.prezime).subscribe(\n      poruka=>{\n        if(poruka.msg=='ok') {this.ngOnInit()}\n        else{ alert('Azuriranje prezimena nije uspelo')}\n      }\n    )\n  }\n\n  promeniMejl(){\n    this.servis.promeniMejl2(this.dekorater.korisnicko_ime,this.imejl).subscribe(\n      poruka=>{\n        if(poruka.msg=='ok') {this.ngOnInit()}\n        else{ alert('Azuriranje mejla nije uspelo')}\n      }\n    )\n  }\n\n  promeniBroj(){\n    this.servis.promeniBroj2(this.dekorater.korisnicko_ime,this.broj).subscribe(\n      poruka=>{\n        if(poruka.msg=='ok') {this.ngOnInit()}\n        else{ alert('Azuriranje broja nije uspelo')}\n      }\n    )\n  }\n  \n\n  ngOnInit(): void {\n      let naziv=localStorage.getItem('ulogovan')\n      naziv=naziv==null?'':naziv\n      this.servis.getDekorater(naziv).subscribe(\n        korisnik=>{\n          this.dekorater=korisnik\n        }\n      )\n  }\n\n  getUserImageUrl(imagePath: string): string {\n    // Kombinujte osnovni URL sa putanjom iz baze\n    return this.backendUrl + imagePath;\n  }\n\n  promeniKarticu(){\n    let proveraKartice=this.kartica.toString()\n    if(!this.dinersRegex.test(proveraKartice) && !this.masterCardRegex.test(proveraKartice) && !this.visaRegex.test(proveraKartice))\n    {\n      this.error='Broj kartice nije u odgovarajucem formatu!'\n    }\n    this.servis.promeniKarticu2(this.dekorater.korisnicko_ime,this.kartica).subscribe(\n      poruka=>{\n        if(poruka.msg=='ok') {this.ngOnInit()}\n        else{ alert('Azuriranje kartice nije uspelo')}\n      }\n    )\n  }\n}\n","<p>dekorater works!</p>\n"],"mappings":"AAGA,OAAOA,SAAS,MAAM,qBAAqB;;;;AAO3C,OAAM,MAAOC,kBAAkB;EAC7BC,YAAoBC,MAAkB,EAASC,KAAY;IAAvC,KAAAD,MAAM,GAANA,MAAM;IAAqB,KAAAC,KAAK,GAALA,KAAK;IAEpD,KAAAC,SAAS,GAAW,IAAIL,SAAS,EAAE;IAEnC,KAAAM,UAAU,GAAW,wBAAwB;IAG7C,KAAAC,WAAW,GAAG,iCAAiC;IAE/C,KAAAC,eAAe,GAAG,0BAA0B;IAG5C,KAAAC,SAAS,GAAG,8CAA8C;IAE1D,KAAAC,GAAG,GAAQ,EAAE;IACb,KAAAC,OAAO,GAAQ,EAAE;IACjB,KAAAC,IAAI,GAAQ,EAAE;IACd,KAAAC,KAAK,GAAQ,EAAE;IACf,KAAAC,OAAO,GAAgB,IAAI;IAC3B,KAAAC,OAAO,GAAQ,CAAC;IAEhB,KAAAC,KAAK,GAAQ,EAAE;EArB8C;EAuB7DC,cAAcA,CAACC,KAAU;IACvB,MAAMC,IAAI,GAASD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACxC,IAAIF,IAAI,KAAKA,IAAI,CAACG,IAAI,KAAK,YAAY,IAAIH,IAAI,CAACG,IAAI,KAAK,WAAW,CAAC,EAAE;MACrE,IAAI,CAACR,OAAO,GAAGK,IAAI,CAAC,CAAE;KACvB,MAAM;MACLI,KAAK,CAAC,mCAAmC,CAAC;;EAE9C;EAEAC,YAAYA,CAAA;IACV,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAC,IAAI,CAACtB,SAAS,CAACuB,cAAc,CAAC;IAC/D,IAAG,IAAI,CAACd,OAAO,EACfW,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAC,IAAI,CAACb,OAAO,CAAC;IACrC,IAAI,CAACX,MAAM,CAAC0B,aAAa,CAACJ,QAAQ,CAAC,CAACK,SAAS,CAC3CC,MAAM,IAAE;MACN,IAAGA,MAAM,CAACC,GAAG,IAAE,IAAI,EAAC;QAAC,IAAI,CAACC,QAAQ,EAAE;OAAC,MACjC;QACFV,KAAK,CAAC,8BAA8B,CAAC;;IAEzC,CAAC,CACF;EAEH;EAEAW,UAAUA,CAAA;IACR,IAAI,CAAC/B,MAAM,CAACgC,WAAW,CAAC,IAAI,CAAC9B,SAAS,CAACuB,cAAc,EAAC,IAAI,CAAClB,GAAG,CAAC,CAACoB,SAAS,CACvEC,MAAM,IAAE;MACN,IAAGA,MAAM,CAACC,GAAG,IAAE,IAAI,EAAE;QAAC,IAAI,CAACC,QAAQ,EAAE;OAAC,MAClC;QAAEV,KAAK,CAAC,8BAA8B,CAAC;;IAC7C,CAAC,CACF;EACH;EAEAa,cAAcA,CAAA;IACZ,IAAI,CAACjC,MAAM,CAACkC,eAAe,CAAC,IAAI,CAAChC,SAAS,CAACuB,cAAc,EAAC,IAAI,CAACjB,OAAO,CAAC,CAACmB,SAAS,CAC/EC,MAAM,IAAE;MACN,IAAGA,MAAM,CAACC,GAAG,IAAE,IAAI,EAAE;QAAC,IAAI,CAACC,QAAQ,EAAE;OAAC,MAClC;QAAEV,KAAK,CAAC,kCAAkC,CAAC;;IACjD,CAAC,CACF;EACH;EAEAe,WAAWA,CAAA;IACT,IAAI,CAACnC,MAAM,CAACoC,YAAY,CAAC,IAAI,CAAClC,SAAS,CAACuB,cAAc,EAAC,IAAI,CAACf,KAAK,CAAC,CAACiB,SAAS,CAC1EC,MAAM,IAAE;MACN,IAAGA,MAAM,CAACC,GAAG,IAAE,IAAI,EAAE;QAAC,IAAI,CAACC,QAAQ,EAAE;OAAC,MAClC;QAAEV,KAAK,CAAC,8BAA8B,CAAC;;IAC7C,CAAC,CACF;EACH;EAEAiB,WAAWA,CAAA;IACT,IAAI,CAACrC,MAAM,CAACsC,YAAY,CAAC,IAAI,CAACpC,SAAS,CAACuB,cAAc,EAAC,IAAI,CAAChB,IAAI,CAAC,CAACkB,SAAS,CACzEC,MAAM,IAAE;MACN,IAAGA,MAAM,CAACC,GAAG,IAAE,IAAI,EAAE;QAAC,IAAI,CAACC,QAAQ,EAAE;OAAC,MAClC;QAAEV,KAAK,CAAC,8BAA8B,CAAC;;IAC7C,CAAC,CACF;EACH;EAGAU,QAAQA,CAAA;IACJ,IAAIS,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC1CF,KAAK,GAACA,KAAK,IAAE,IAAI,GAAC,EAAE,GAACA,KAAK;IAC1B,IAAI,CAACvC,MAAM,CAAC0C,YAAY,CAACH,KAAK,CAAC,CAACZ,SAAS,CACvCgB,QAAQ,IAAE;MACR,IAAI,CAACzC,SAAS,GAACyC,QAAQ;IACzB,CAAC,CACF;EACL;EAEAC,eAAeA,CAACC,SAAiB;IAC/B;IACA,OAAO,IAAI,CAAC1C,UAAU,GAAG0C,SAAS;EACpC;EAEAC,cAAcA,CAAA;IACZ,IAAIC,cAAc,GAAC,IAAI,CAACnC,OAAO,CAACoC,QAAQ,EAAE;IAC1C,IAAG,CAAC,IAAI,CAAC5C,WAAW,CAAC6C,IAAI,CAACF,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC1C,eAAe,CAAC4C,IAAI,CAACF,cAAc,CAAC,IAAI,CAAC,IAAI,CAACzC,SAAS,CAAC2C,IAAI,CAACF,cAAc,CAAC,EAC/H;MACE,IAAI,CAAClC,KAAK,GAAC,4CAA4C;;IAEzD,IAAI,CAACb,MAAM,CAACkD,eAAe,CAAC,IAAI,CAAChD,SAAS,CAACuB,cAAc,EAAC,IAAI,CAACb,OAAO,CAAC,CAACe,SAAS,CAC/EC,MAAM,IAAE;MACN,IAAGA,MAAM,CAACC,GAAG,IAAE,IAAI,EAAE;QAAC,IAAI,CAACC,QAAQ,EAAE;OAAC,MAClC;QAAEV,KAAK,CAAC,gCAAgC,CAAC;;IAC/C,CAAC,CACF;EACH;EAAC,QAAA+B,CAAA,G;qBAjHUrD,kBAAkB,EAAAsD,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB5D,kBAAkB;IAAA6D,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV/BZ,EAAA,CAAAc,cAAA,QAAG;QAAAd,EAAA,CAAAe,MAAA,uBAAgB;QAAAf,EAAA,CAAAgB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}