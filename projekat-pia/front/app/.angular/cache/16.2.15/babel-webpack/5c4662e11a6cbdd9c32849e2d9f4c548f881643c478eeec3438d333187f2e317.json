{"ast":null,"code":"import { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nexport class DekoraterStatistikaComponent {\n  constructor(servis, ruter) {\n    this.servis = servis;\n    this.ruter = ruter;\n    this.jobsPerMonth = [10, 15, 5, 20, 12, 18, 9, 15, 10, 8, 14, 16]; // Primer podataka za svaki mesec\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.createChart();\n    }, 0);\n  }\n  createChart() {\n    const canvas = document.getElementById('myChart');\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          datasets: [{\n            label: 'Broj poslova',\n            data: this.jobsPerMonth,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    } else {\n      console.error('Failed to get canvas context.');\n    }\n  }\n  static #_ = this.ɵfac = function DekoraterStatistikaComponent_Factory(t) {\n    return new (t || DekoraterStatistikaComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DekoraterStatistikaComponent,\n    selectors: [[\"app-dekorater-statistika\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[\"id\", \"myChart\", \"width\", \"400\", \"height\", \"200\"]],\n    template: function DekoraterStatistikaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Broj poslova po mesecima\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"canvas\", 0);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"canvas[_ngcontent-%COMP%] {\\n    max-width: 100%;\\n    height: auto;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGVrb3JhdGVyLXN0YXRpc3Rpa2EvZGVrb3JhdGVyLXN0YXRpc3Rpa2EuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixZQUFZO0VBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyJjYW52YXMge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Chart","DekoraterStatistikaComponent","constructor","servis","ruter","jobsPerMonth","ngOnInit","setTimeout","createChart","canvas","document","getElementById","ctx","getContext","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","console","error","_","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","DekoraterStatistikaComponent_Template","rf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\projekat-pia\\front\\app\\src\\app\\dekorater-statistika\\dekorater-statistika.component.ts","D:\\projekat-pia\\front\\app\\src\\app\\dekorater-statistika\\dekorater-statistika.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dekorater-statistika',\n  templateUrl: './dekorater-statistika.component.html',\n  styleUrls: ['./dekorater-statistika.component.css']\n})\nexport class DekoraterStatistikaComponent implements OnInit {\n  public jobsPerMonth: number[] = [10, 15, 5, 20, 12, 18, 9, 15, 10, 8, 14, 16]; // Primer podataka za svaki mesec\n\n  constructor(private servis: UserService, private ruter: Router) {}\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.createChart();\n    }, 0);\n  }\n\n  createChart() {\n    const canvas = document.getElementById('myChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d');\n\n    if (ctx) {\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: [\n            'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n          ],\n          datasets: [{\n            label: 'Broj poslova',\n            data: this.jobsPerMonth,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    } else {\n      console.error('Failed to get canvas context.');\n    }\n  }\n}\n","<div>\n    <h2>Broj poslova po mesecima</h2>\n    <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n  </div>\n  \n"],"mappings":"AACA,SAASA,KAAK,QAAQ,UAAU;;;;AAShC,OAAM,MAAOC,4BAA4B;EAGvCC,YAAoBC,MAAmB,EAAUC,KAAa;IAA1C,KAAAD,MAAM,GAANA,MAAM;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAF/C,KAAAC,YAAY,GAAa,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;EAEd;;EAEjEC,QAAQA,CAAA;IACNC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC,EAAE,CAAC,CAAC;EACP;EAEAA,WAAWA,CAAA;IACT,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAsB;IACtE,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IAEnC,IAAID,GAAG,EAAE;MACP,IAAIZ,KAAK,CAACY,GAAG,EAAE;QACbE,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;UACJC,MAAM,EAAE,CACN,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EACxC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CACzC;UACDC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,cAAc;YACrBH,IAAI,EAAE,IAAI,CAACV,YAAY;YACvBc,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;WACd;SACF;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE;;;;OAIpB,CAAC;KACH,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;;EAElD;EAAC,QAAAC,CAAA,G;qBA1CU3B,4BAA4B,EAAA4B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA5BlC,4BAA4B;IAAAmC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAA9B,GAAA;MAAA,IAAA8B,EAAA;QCVzCb,EAAA,CAAAc,cAAA,UAAK;QACGd,EAAA,CAAAe,MAAA,+BAAwB;QAAAf,EAAA,CAAAgB,YAAA,EAAK;QACjChB,EAAA,CAAAiB,SAAA,gBAAuD;QACzDjB,EAAA,CAAAgB,YAAA,EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}