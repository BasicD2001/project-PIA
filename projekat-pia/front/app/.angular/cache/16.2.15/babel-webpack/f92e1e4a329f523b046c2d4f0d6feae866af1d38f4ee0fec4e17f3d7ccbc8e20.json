{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Vlasnik from '../models/vlasnik';\nexport let VlasnikComponent = class VlasnikComponent {\n  constructor(servis, ruter, http) {\n    this.servis = servis;\n    this.ruter = ruter;\n    this.http = http;\n    this.vlasnik = new Vlasnik();\n    this.backendUrl = 'http://localhost:4000/';\n  }\n  ngOnInit() {\n    let naziv = localStorage.getItem('ulogovan');\n    naziv = naziv == null ? '' : naziv;\n    this.servis.getVlasnik(naziv).subscribe(korisnik => {\n      this.vlasnik = korisnik;\n    });\n  }\n  getUserImageUrl(imagePath) {\n    // Kombinujte osnovni URL sa putanjom iz baze\n    return this.backendUrl + imagePath;\n  }\n};\nVlasnikComponent = __decorate([Component({\n  selector: 'app-vlasnik',\n  templateUrl: './vlasnik.component.html',\n  styleUrls: ['./vlasnik.component.css']\n})], VlasnikComponent);","map":{"version":3,"names":["Component","Vlasnik","VlasnikComponent","constructor","servis","ruter","http","vlasnik","backendUrl","ngOnInit","naziv","localStorage","getItem","getVlasnik","subscribe","korisnik","getUserImageUrl","imagePath","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\projekat-pia\\front\\app\\src\\app\\vlasnik\\vlasnik.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport Vlasnik from '../models/vlasnik';\n\n@Component({\n  selector: 'app-vlasnik',\n  templateUrl: './vlasnik.component.html',\n  styleUrls: ['./vlasnik.component.css']\n})\nexport class VlasnikComponent implements OnInit {\n\n    constructor(private servis:UserService,private ruter:Router,private http:HttpClient){}\n\n    vlasnik:Vlasnik=new Vlasnik()\n\n    backendUrl: string = 'http://localhost:4000/';\n\n    \n\n    ngOnInit(): void {\n        let naziv=localStorage.getItem('ulogovan')\n        naziv=naziv==null?'':naziv\n        this.servis.getVlasnik(naziv).subscribe(\n          korisnik=>{\n            this.vlasnik=korisnik\n          }\n        )\n    }\n\n    getUserImageUrl(imagePath: string): string {\n      // Kombinujte osnovni URL sa putanjom iz baze\n      return this.backendUrl + imagePath;\n    }\n  }\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,OAAOC,OAAO,MAAM,mBAAmB;AAOhC,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAEzBC,YAAoBC,MAAkB,EAASC,KAAY,EAASC,IAAe;IAA/D,KAAAF,MAAM,GAANA,MAAM;IAAqB,KAAAC,KAAK,GAALA,KAAK;IAAgB,KAAAC,IAAI,GAAJA,IAAI;IAExE,KAAAC,OAAO,GAAS,IAAIN,OAAO,EAAE;IAE7B,KAAAO,UAAU,GAAW,wBAAwB;EAJwC;EAQrFC,QAAQA,CAAA;IACJ,IAAIC,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC1CF,KAAK,GAACA,KAAK,IAAE,IAAI,GAAC,EAAE,GAACA,KAAK;IAC1B,IAAI,CAACN,MAAM,CAACS,UAAU,CAACH,KAAK,CAAC,CAACI,SAAS,CACrCC,QAAQ,IAAE;MACR,IAAI,CAACR,OAAO,GAACQ,QAAQ;IACvB,CAAC,CACF;EACL;EAEAC,eAAeA,CAACC,SAAiB;IAC/B;IACA,OAAO,IAAI,CAACT,UAAU,GAAGS,SAAS;EACpC;CACD;AAxBUf,gBAAgB,GAAAgB,UAAA,EAL5BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWnB,gBAAgB,CAwB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}