{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as L from 'leaflet';\nexport let FirmaComponent = class FirmaComponent {\n  constructor() {\n    this.adresa = '';\n    this.naziv = '';\n    this.cena = 0;\n    this.usluga = '';\n  }\n  ngOnInit() {\n    this.inicijalizujMapu();\n  }\n  inicijalizujMapu() {\n    this.map = L.map('map').setView([51.673858, 7.815982], 10); // Podrazumevana lokacija\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n  }\n  pretraziAdresu() {\n    if (!this.adresa) return;\n    const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(this.adresa)}&format=json&limit=1`;\n    fetch(url).then(response => response.json()).then(data => {\n      if (data.length > 0) {\n        const lat = parseFloat(data[0].lat);\n        const lon = parseFloat(data[0].lon);\n        if (this.map && this.marker) {\n          this.map.removeLayer(this.marker); // Ukloni prethodni marker ako postoji\n        }\n\n        this.map.setView([lat, lon], 15); // Prikazivanje mape sa novom lokacijom\n        this.marker = L.marker([lat, lon]).addTo(this.map);\n        this.marker.bindPopup(`<b>${this.adresa}</b>`).openPopup();\n      } else {\n        alert('Adresa nije pronađena.');\n      }\n    }).catch(error => {\n      console.error('Greška prilikom geokodiranja:', error);\n      alert('Greška prilikom geokodiranja.');\n    });\n  }\n  dodajUslugu() {}\n};\nFirmaComponent = __decorate([Component({\n  selector: 'app-firma',\n  templateUrl: './firma.component.html',\n  styleUrls: ['./firma.component.css']\n})], FirmaComponent);","map":{"version":3,"names":["Component","L","FirmaComponent","constructor","adresa","naziv","cena","usluga","ngOnInit","inicijalizujMapu","map","setView","tileLayer","attribution","addTo","pretraziAdresu","url","encodeURIComponent","fetch","then","response","json","data","length","lat","parseFloat","lon","marker","removeLayer","bindPopup","openPopup","alert","catch","error","console","dodajUslugu","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\projekat-pia\\front\\app\\src\\app\\firma\\firma.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-firma',\n  templateUrl: './firma.component.html',\n  styleUrls: ['./firma.component.css']\n})\nexport class FirmaComponent implements OnInit {\n  adresa: string = '';\n  naziv:string=''\n  map: any\n  marker: L.Marker | undefined;\n  cena:number=0;\n  usluga:string=''\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.inicijalizujMapu();\n  }\n\n  inicijalizujMapu(): void {\n    this.map = L.map('map').setView([51.673858, 7.815982], 10); // Podrazumevana lokacija\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n  }\n\n  pretraziAdresu(): void {\n    if (!this.adresa) return;\n\n    const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(this.adresa)}&format=json&limit=1`;\n\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (data.length > 0) {\n          const lat = parseFloat(data[0].lat);\n          const lon = parseFloat(data[0].lon);\n\n          if (this.map && this.marker) {\n            this.map.removeLayer(this.marker); // Ukloni prethodni marker ako postoji\n          }\n\n          this.map.setView([lat, lon], 15); // Prikazivanje mape sa novom lokacijom\n\n          this.marker = L.marker([lat, lon]).addTo(this.map);\n          this.marker.bindPopup(`<b>${this.adresa}</b>`).openPopup();\n        } else {\n          alert('Adresa nije pronađena.');\n        }\n      })\n      .catch(error => {\n        console.error('Greška prilikom geokodiranja:', error);\n        alert('Greška prilikom geokodiranja.');\n      });\n  }\n\n  dodajUslugu(){}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,OAAO,KAAKC,CAAC,MAAM,SAAS;AAOrB,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAQzBC,YAAA;IAPA,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAAC,KAAK,GAAQ,EAAE;IAGf,KAAAC,IAAI,GAAQ,CAAC;IACb,KAAAC,MAAM,GAAQ,EAAE;EAED;EAEfC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgBA,CAAA;IACd,IAAI,CAACC,GAAG,GAAGT,CAAC,CAACS,GAAG,CAAC,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAE5DV,CAAC,CAACW,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;KACd,CAAC,CAACC,KAAK,CAAC,IAAI,CAACJ,GAAG,CAAC;EACpB;EAEAK,cAAcA,CAAA;IACZ,IAAI,CAAC,IAAI,CAACX,MAAM,EAAE;IAElB,MAAMY,GAAG,GAAG,gDAAgDC,kBAAkB,CAAC,IAAI,CAACb,MAAM,CAAC,sBAAsB;IAEjHc,KAAK,CAACF,GAAG,CAAC,CACPG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAG;MACX,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACnB,MAAMC,GAAG,GAAGC,UAAU,CAACH,IAAI,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC;QACnC,MAAME,GAAG,GAAGD,UAAU,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC;QAEnC,IAAI,IAAI,CAAChB,GAAG,IAAI,IAAI,CAACiB,MAAM,EAAE;UAC3B,IAAI,CAACjB,GAAG,CAACkB,WAAW,CAAC,IAAI,CAACD,MAAM,CAAC,CAAC,CAAC;;;QAGrC,IAAI,CAACjB,GAAG,CAACC,OAAO,CAAC,CAACa,GAAG,EAAEE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAElC,IAAI,CAACC,MAAM,GAAG1B,CAAC,CAAC0B,MAAM,CAAC,CAACH,GAAG,EAAEE,GAAG,CAAC,CAAC,CAACZ,KAAK,CAAC,IAAI,CAACJ,GAAG,CAAC;QAClD,IAAI,CAACiB,MAAM,CAACE,SAAS,CAAC,MAAM,IAAI,CAACzB,MAAM,MAAM,CAAC,CAAC0B,SAAS,EAAE;OAC3D,MAAM;QACLC,KAAK,CAAC,wBAAwB,CAAC;;IAEnC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAG;MACbC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDF,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC;EACN;EAEAI,WAAWA,CAAA,GAAG;CACf;AArDYjC,cAAc,GAAAkC,UAAA,EAL1BpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWrC,cAAc,CAqD1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}